{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Nav/NavContainer.js\";\n// NavContainer.js\nimport React from 'react';\n\nclass NavContainer extends React.Component {\n  constructor(props) {\n    super(props); // Set the menus default state\n\n    this.state = {\n      isOpen: false\n    }; // Binders\n\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // check if the menu is open, before calling handleClick\n    // so that we don't close the  \n    if (this.state.isOpen) {\n      this.handleClick();\n    }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    } // toggle the state, which in turn closes/opens the menu\n\n\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) {\n      return;\n    } // call handleClick to remove handler and close the menu\n\n\n    this.handleClick();\n  }\n\n  render() {\n    // styles for the logo\n    const logoStyles = {\n      height: \"50px\"\n    }; // the open/close menu toggler\n\n    const menuClassNameToggler = this.state.isOpen ? \" Nav__menu--open\" : \"\";\n    return /*#__PURE__*/React.createElement(Nav // pass props\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default NavContainer;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Nav/NavContainer.js"],"names":["React","NavContainer","Component","constructor","props","state","isOpen","handleLogoClick","bind","handleClick","handleOutsideClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","render","logoStyles","height","menuClassNameToggler"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb,CAJiB,CAMjB;;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAGDD,EAAAA,eAAe,GAAG;AAChB;AACA;AACA,QAAI,KAAKF,KAAL,CAAWC,MAAf,EAAuB;AAAE,WAAKG,WAAL;AAAqB;AAC/C;;AAEDA,EAAAA,WAAW,GAAG;AACZ;AACA;AACA;AACA;AACA,QAAI,CAAC,KAAKJ,KAAL,CAAWC,MAAhB,EAAwB;AACtBK,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKF,kBAAxC,EAA4D,KAA5D;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKH,kBAA3C,EAA+D,KAA/D;AACD,KATW,CAUZ;;;AACA,SAAKI,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,KAAd;AACD;;AAEDI,EAAAA,kBAAkB,CAACK,CAAD,EAAI;AACpB;AACA,QAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAAE;AAAS,KAFzB,CAGpB;;;AACA,SAAKT,WAAL;AACD;;AAEDU,EAAAA,MAAM,GAAG;AAEP;AACA,UAAMC,UAAU,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAnB,CAHO,CAKP;;AACA,UAAMC,oBAAoB,GAAG,KAAKjB,KAAL,CAAWC,MAAX,GAAoB,kBAApB,GAAyC,EAAtE;AAEA,wBACE,oBAAC,GAAD,CACE;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAtDwC;;AAyD3C,eAAeL,YAAf","sourcesContent":["// NavContainer.js\n\nimport React from 'react';\n\nclass NavContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    // Set the menus default state\n    this.state = { isOpen: false }\n    \n    // Binders\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n   \n  handleLogoClick() {\n    // check if the menu is open, before calling handleClick\n    // so that we don't close the  \n    if (this.state.isOpen) { this.handleClick(); }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n    // toggle the state, which in turn closes/opens the menu\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) { return; }\n    // call handleClick to remove handler and close the menu\n    this.handleClick();\n  }\n  \n  render() {\n    \n    // styles for the logo\n    const logoStyles = { height: \"50px\" }\n    \n    // the open/close menu toggler\n    const menuClassNameToggler = this.state.isOpen ? \" Nav__menu--open\" : \"\";\n\n    return(\n      <Nav \n        // pass props\n      />\n    )\n  }\n}\n\nexport default NavContainer;"]},"metadata":{},"sourceType":"module"}
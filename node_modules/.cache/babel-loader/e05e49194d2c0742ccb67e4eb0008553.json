{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/Dropdown/Dropdown.js\";\nimport React from 'react';\nimport MultiSelect from '../MultiSelect/MultiSelect';\nimport './Dropdown.css';\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    }; // binders: \n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.state.active) {\n      // attach/remove event handler\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    } // toggle the states active prop\n\n\n    this.setState({\n      active: !this.state.active\n    });\n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.handleClick();\n  }\n\n  render() {\n    // toggle the visibility of the MultiSelect component\n    // using the components state\n    let toggleVisibility = this.state.active ? '' : ' hidden';\n    let label = ''; // if the array containing the labels is empty,\n    // it means there are no treatments chosen,\n    // then we update the label to contain a custom msg\n    // #refactor: the msg should come from the parent \n    // for when different languages are introduced\n\n    if (this.props.chosenLabels.length === 0) {\n      label += 'Vælg Behandling';\n    } else {\n      label += \"\" + this.props.chosenLabels;\n    }\n\n    let toggleIcon = this.state.active ? ' rotate-icon' : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dropdown-wrapper\",\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"Dropdown-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, label), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"Drowdown-icon\" + toggleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MultiSelect-wrapper\" + toggleVisibility,\n      ref: node => {\n        this.node = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      labels: this.props.labels,\n      isChecked: this.props.isChecked,\n      onClick: this.props.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n;\nexport default Dropdown;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/Dropdown/Dropdown.js"],"names":["React","MultiSelect","Dropdown","Component","constructor","props","state","active","handleClick","bind","handleOutsideClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","render","toggleVisibility","label","chosenLabels","length","toggleIcon","labels","isChecked","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb,CAFiB,CAMjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,KAAKF,KAAL,CAAWC,MAAhB,EAAwB;AACtB;AACAI,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKF,kBAAxC,EAA4D,KAA5D;AACD,KAHD,MAGO;AACLC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKH,kBAA3C,EAA+D,KAA/D;AACD,KANW,CAQZ;;;AACA,SAAKI,QAAL,CAAc;AACZP,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,KAAd;AAGD;;AAEDG,EAAAA,kBAAkB,CAACK,CAAD,EAAI;AACpB;AACA,QAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAChC;AACD;;AAED,SAAKV,WAAL;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP;AACA;AACA,QAAIC,gBAAgB,GAAG,KAAKd,KAAL,CAAWC,MAAX,GAAoB,EAApB,GAAyB,SAAhD;AAEA,QAAIc,KAAK,GAAG,EAAZ,CALO,CAMP;AACA;AACA;AACA;AACA;;AACA,QAAI,KAAKhB,KAAL,CAAWiB,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACxCF,MAAAA,KAAK,IAAG,iBAAR;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,IAAG,KAAK,KAAKhB,KAAL,CAAWiB,YAAxB;AACD;;AAED,QAAIE,UAAU,GAAG,KAAKlB,KAAL,CAAWC,MAAX,GAAoB,cAApB,GAAqC,EAAtD;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,OAAO,EAAG,MAAM,KAAKC,WAAL,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCa,KAAlC,CAJF,eAKE;AAAG,MAAA,SAAS,EAAE,kBAAkBG,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,eAQE;AACE,MAAA,SAAS,EAAE,wBAAwBJ,gBADrC;AAGE,MAAA,GAAG,EAAEJ,IAAI,IAAI;AAAE,aAAKA,IAAL,GAAYA,IAAZ;AAAmB,OAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWoB,MADrB;AAEE,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWqB,SAFxB;AAGE,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWsB,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CARF,CADF;AAsBD;;AA5EoC;;AA6EtC;AAED,eAAezB,QAAf","sourcesContent":["import React from 'react';\nimport MultiSelect from '../MultiSelect/MultiSelect';\nimport './Dropdown.css';\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    // binders: \n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  };\n\n  handleClick() {\n    if (!this.state.active) {\n      // attach/remove event handler\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    // toggle the states active prop\n    this.setState({\n      active: !this.state.active\n    }) \n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    \n    this.handleClick();\n  }\n\n  render() {\n    // toggle the visibility of the MultiSelect component\n    // using the components state\n    let toggleVisibility = this.state.active ? '' : ' hidden';\n\n    let label = '';\n    // if the array containing the labels is empty,\n    // it means there are no treatments chosen,\n    // then we update the label to contain a custom msg\n    // #refactor: the msg should come from the parent \n    // for when different languages are introduced\n    if (this.props.chosenLabels.length === 0) {\n      label+= 'Vælg Behandling';\n    } else {\n      label+= \"\" + this.props.chosenLabels;\n    }\n\n    let toggleIcon = this.state.active ? ' rotate-icon' : '';\n\n    return(\n      <div>\n        <div \n          className=\"Dropdown-wrapper\"\n          onClick={ () => this.handleClick() }\n        >\n          <span className=\"Dropdown-label\">{label}</span>\n          <i className={\"Drowdown-icon\" + toggleIcon}></i>\n        </div>\n        <div \n          className={\"MultiSelect-wrapper\" + toggleVisibility}\n          \n          ref={node => { this.node = node; }}\n          > \n          <MultiSelect \n            labels={this.props.labels}\n            isChecked={this.props.isChecked}\n            onClick={this.props.onClick}\n          />\n        </div> \n      </div>    \n    );\n  };\n};\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}
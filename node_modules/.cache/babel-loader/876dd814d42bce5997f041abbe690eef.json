{"ast":null,"code":"// SearchForm.js\nimport React from'react';import DropdownContainer from'./Dropdown/DropdownContainer';import MultiSelectList from'./MultiSelectList/MultiSelectList';import DateRangePicker from'./DateRangePicker/DateRangePicker';var SearchForm=function SearchForm(props){// create the treatment-area-icon-buttons\nvar treatmentAreaIconButtons=props.treatAreaAndIsActivePairs.map(function(currPair,i){var treatmentArea=currPair[0];var isActive=currPair[1];var toggleIsActiveModifier=isActive?'':' SearchForm__treatAreaIconBtn--notActive';return/*#__PURE__*/React.createElement(\"li\",{key:treatmentArea+i},/*#__PURE__*/React.createElement(\"button\",{className:\"SearchForm__treatAreaIconBtn\"+toggleIsActiveModifier,onClick:function onClick(){return props.onClick(treatmentArea);}},/*#__PURE__*/React.createElement(\"img\",{src:props.treatAreaIcons[i],alt:treatmentArea}),/*#__PURE__*/React.createElement(\"span\",{className:\"SearchForm__treatAreaIconBtnLabel\"},treatmentArea)));});return/*#__PURE__*/React.createElement(\"div\",{className:\"SearchForm\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"SearchForm__treatAreaIconBtnList\"},treatmentAreaIconButtons),/*#__PURE__*/React.createElement(\"div\",{className:\"SearchForm__treatmentAreasDrowdown\"},/*#__PURE__*/React.createElement(DropdownContainer,{label:props.treatAreaDropdownLabel,body:/*#__PURE__*/React.createElement(MultiSelectList,{labelIsActivePairs:props.treatAreaAndIsActivePairs,onClick:props.onClick})})),/*#__PURE__*/React.createElement(\"div\",{className:\"SearchForm__pickDateDropdown\"},/*#__PURE__*/React.createElement(DropdownContainer,{label:props.pickDateLabel,body:/*#__PURE__*/React.createElement(DateRangePicker,{from:props.from,to:props.to,onDateClick:props.onDateClick})})),/*#__PURE__*/React.createElement(\"button\",{className:\"SearchForm__submitButton\",onClick:props.getSearchResults},\"submit\"));};export default SearchForm;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/SearchForm.js"],"names":["React","DropdownContainer","MultiSelectList","DateRangePicker","SearchForm","props","treatmentAreaIconButtons","treatAreaAndIsActivePairs","map","currPair","i","treatmentArea","isActive","toggleIsActiveModifier","onClick","treatAreaIcons","treatAreaDropdownLabel","pickDateLabel","from","to","onDateClick","getSearchResults"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B;AACA,GAAMC,CAAAA,wBAAwB,CAAGD,KAAK,CAACE,yBAAN,CAAgCC,GAAhC,CAAqC,SAACC,QAAD,CAAWC,CAAX,CAAiB,CACrF,GAAMC,CAAAA,aAAa,CAAGF,QAAQ,CAAC,CAAD,CAA9B,CACA,GAAMG,CAAAA,QAAQ,CAAGH,QAAQ,CAAC,CAAD,CAAzB,CACA,GAAMI,CAAAA,sBAAsB,CAAGD,QAAQ,CAAG,EAAH,CAAQ,0CAA/C,CACA,mBACE,0BAAI,GAAG,CAAED,aAAa,CAAGD,CAAzB,eACE,8BACE,SAAS,CAAE,+BAAiCG,sBAD9C,CAEE,OAAO,CAAG,yBAAMR,CAAAA,KAAK,CAACS,OAAN,CAAcH,aAAd,CAAN,EAFZ,eAGE,2BACE,GAAG,CAAEN,KAAK,CAACU,cAAN,CAAqBL,CAArB,CADP,CAEE,GAAG,CAAEC,aAFP,EAHF,cAME,4BAAM,SAAS,CAAC,mCAAhB,EAAqDA,aAArD,CANF,CADF,CADF,CAYD,CAhBgC,CAAjC,CAkBA,mBACE,2BAAK,SAAS,CAAC,YAAf,eAEE,0BAAI,SAAS,CAAC,kCAAd,EACGL,wBADH,CAFF,cAKE,2BAAK,SAAS,CAAC,oCAAf,eACE,oBAAC,iBAAD,EACE,KAAK,CAAED,KAAK,CAACW,sBADf,CAEE,IAAI,cACF,oBAAC,eAAD,EACE,kBAAkB,CAAEX,KAAK,CAACE,yBAD5B,CAEE,OAAO,CAAEF,KAAK,CAACS,OAFjB,EAHJ,EADF,CALF,cAiBE,2BAAK,SAAS,CAAC,8BAAf,eACE,oBAAC,iBAAD,EACE,KAAK,CAAET,KAAK,CAACY,aADf,CAEE,IAAI,cACF,oBAAC,eAAD,EACE,IAAI,CAAEZ,KAAK,CAACa,IADd,CAEE,EAAE,CAAEb,KAAK,CAACc,EAFZ,CAGE,WAAW,CAAEd,KAAK,CAACe,WAHrB,EAHJ,EADF,CAjBF,cA6BE,8BACE,SAAS,CAAC,0BADZ,CAEE,OAAO,CAAEf,KAAK,CAACgB,gBAFjB,WA7BF,CADF,CAsCD,CA1DD,CA4DA,cAAejB,CAAAA,UAAf","sourcesContent":["// SearchForm.js\n\nimport React from 'react';\nimport DropdownContainer from './Dropdown/DropdownContainer'; \nimport MultiSelectList from './MultiSelectList/MultiSelectList';\nimport DateRangePicker from './DateRangePicker/DateRangePicker';\n\nconst SearchForm = props => { \n  // create the treatment-area-icon-buttons\n  const treatmentAreaIconButtons = props.treatAreaAndIsActivePairs.map( (currPair, i) => {\n    const treatmentArea = currPair[0];\n    const isActive = currPair[1]; \n    const toggleIsActiveModifier = isActive ? '' : ' SearchForm__treatAreaIconBtn--notActive';\n    return (\n      <li key={treatmentArea + i}>\n        <button\n          className={\"SearchForm__treatAreaIconBtn\" + toggleIsActiveModifier}\n          onClick={ () => props.onClick(treatmentArea)}>\n          <img           \n            src={props.treatAreaIcons[i]} \n            alt={treatmentArea} />\n          <span className=\"SearchForm__treatAreaIconBtnLabel\">{treatmentArea}</span>\n        </button>  \n      </li>\n    );\n  });\n  \n  return(\n    <div className=\"SearchForm\">\n      \n      <ul className=\"SearchForm__treatAreaIconBtnList\">\n        {treatmentAreaIconButtons}\n      </ul>\n      <div className=\"SearchForm__treatmentAreasDrowdown\">\n        <DropdownContainer \n          label={props.treatAreaDropdownLabel}\n          body={\n            <MultiSelectList \n              labelIsActivePairs={props.treatAreaAndIsActivePairs}\n              onClick={props.onClick}\n            />\n          }\n        />\n      </div>\n\n      <div className=\"SearchForm__pickDateDropdown\">\n        <DropdownContainer \n          label={props.pickDateLabel}\n          body={\n            <DateRangePicker\n              from={props.from}\n              to={props.to}\n              onDateClick={props.onDateClick}\n            />}\n        />\n      </div>\n\n      <button \n        className=\"SearchForm__submitButton\"\n        onClick={props.getSearchResults}>\n        submit\n      </button>\n\n    </div>\n  )\n}\n\nexport default SearchForm;\n\n"]},"metadata":{},"sourceType":"module"}
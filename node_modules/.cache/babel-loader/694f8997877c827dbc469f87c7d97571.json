{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/ContactForm/ContactForm.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n/* The Error Messages */\n\nconst contactFormSchema = Yup.object({\n  name: Yup.string().max(30, 'Max 30 tegn').required('Udfyld et navn'),\n  email: Yup.string().email('Dobbeltjek din email').required('Udfyld en email')\n});\n\nconst ContactForm = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ContactForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ContactForm__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Vil du h\\xF8re mere?\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: ''\n    },\n    validationSchema: contactFormSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      let name = JSON.stringify(values.name);\n      let email = JSON.stringify(values.email);\n      fetch(`/api/send-email?name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}`).then(response => response.json()).then(response => console.log(response));\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"ContactForm__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Udfyld dit navn\",\n    className: \"ContactForm__nameInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    className: \"ContactForm__errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Og din email\",\n    className: \"ContactForm__emailInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    className: \"ContactForm__errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"ContactForm__submitButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Ja tak!\"))));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/ContactForm/ContactForm.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","contactFormSchema","object","name","string","max","required","email","ContactForm","values","setSubmitting","JSON","stringify","fetch","encodeURIComponent","then","response","json","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA;;AACA,MAAMC,iBAAiB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACnCC,EAAAA,IAAI,EAAEH,GAAG,CAACI,MAAJ,GACHC,GADG,CACC,EADD,EACK,aADL,EAEHC,QAFG,CAEM,gBAFN,CAD6B;AAInCC,EAAAA,KAAK,EAAEP,GAAG,CAACI,MAAJ,GACJG,KADI,CACE,sBADF,EAEJD,QAFI,CAEK,iBAFL;AAJ4B,CAAX,CAA1B;;AASA,MAAME,WAAW,GAAG,MAAM;AACxB,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEL,MAAAA,IAAI,EAAE,EAAR;AAAYI,MAAAA,KAAK,EAAE;AAAnB,KADjB;AAEE,IAAA,gBAAgB,EAAEN,iBAFpB;AAGE,IAAA,QAAQ,EAAE,CAACQ,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvC,UAAIP,IAAI,GAAGQ,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACN,IAAtB,CAAX;AACA,UAAII,KAAK,GAAGI,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACF,KAAtB,CAAZ;AACAM,MAAAA,KAAK,CAAE,wBAAuBC,kBAAkB,CAACX,IAAD,CAAO,UAASW,kBAAkB,CAACP,KAAD,CAAQ,EAArF,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAIE,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAFlB;AAGAN,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,SAAS,EAAC,wBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAWE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,SAAS,EAAC,yBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAiBE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAqBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBF,CAZF,CAFF,CADF;AA6CD,CA9CD;;AAgDA,eAAeF,WAAf","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n/* The Error Messages */\nconst contactFormSchema = Yup.object({\n  name: Yup.string()\n    .max(30, 'Max 30 tegn')\n    .required('Udfyld et navn'),\n  email: Yup.string()\n    .email('Dobbeltjek din email')\n    .required('Udfyld en email'),\n});\n\nconst ContactForm = () => {\n  return (\n    <div className=\"ContactForm\">\n      <p className=\"ContactForm__heading\">Vil du h√∏re mere?</p>\n      <Formik\n        initialValues={{ name: '', email: '' }}\n        validationSchema={contactFormSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          let name = JSON.stringify(values.name);\n          let email = JSON.stringify(values.email);\n          fetch(`/api/send-email?name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}`)\n          .then(response => response.json())\n          .then(response => console.log(response));\n          setSubmitting(false);\n        }}\n      >\n        <Form className=\"ContactForm__form\">\n          <Field \n            name=\"name\" \n            type=\"text\" \n            placeholder=\"Udfyld dit navn\"\n            className=\"ContactForm__nameInput\" \n          />\n          <ErrorMessage \n            name=\"name\" \n            className=\"ContactForm__errorMessage\"  \n          />\n          <Field \n            name=\"email\" \n            type=\"email\" \n            placeholder=\"Og din email\"\n            className=\"ContactForm__emailInput\" \n          />\n          <ErrorMessage \n            name=\"name\" \n            className=\"ContactForm__errorMessage\"  \n          />\n          <button \n            type=\"submit\"\n            className=\"ContactForm__submitButton\">\n              Ja tak!\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}
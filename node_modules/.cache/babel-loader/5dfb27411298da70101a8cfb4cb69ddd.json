{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/SearchForm.js\";\n// SearchForm.js\n// WIP: keep refactoring the creating of the treatments icons list items\nimport React from 'react';\nimport Dropdown from './Dropdown/Dropdown';\nimport CalendarDropdown from './CalendarDropdown/CalendarDropdown';\n\nconst SearchForm = props => {\n  const isActiveToggler = props.isActiveArray[i] ? 'treatment-btn active-treatment' : 'treatment-btn inactive-treatment'; // Create the treatment-icons list items\n\n  const treatmentIconsListItems = props.labels.map((currentLabel, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: props.isActiveArray[i] ? ' active-treatment' : ' inactive-treatment' // the passed function uses the passed label \n      // to identify the treatment btn that has been clicked\n      ,\n      onClick: () => props.onClick(currentLabel),\n      key: currentLabel + i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"treatment-btn\" + isActiveToggler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"className=treatment-btn \\\" + \", isActiveToggler, \">\", /*#__PURE__*/React.createElement(\"img\", {\n      className: \"treatment-btn-icon\",\n      src: props.icons[i],\n      alt: \"Icon For \" + currentLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"treatment-btn-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, currentLabel)));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SearchForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"SearchForm__treatmentIconsList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, treatmentIconsListItems), /*#__PURE__*/React.createElement(Dropdown, {\n    labels: props.labels,\n    chosenLabels: props.activeLabels,\n    isChecked: props.isActiveArray,\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CalendarDropdown, {\n    from: props.fromDate,\n    to: props.toDate,\n    handleDateClick: props.onDatePick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SubmitButton-wrapper\",\n    onClick: props.getSearchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Submit\")));\n};\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/SearchForm.js"],"names":["React","Dropdown","CalendarDropdown","SearchForm","props","isActiveToggler","isActiveArray","i","treatmentIconsListItems","labels","map","currentLabel","onClick","icons","activeLabels","fromDate","toDate","onDatePick","getSearchResults"],"mappings":";AAAA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAE1B,QAAMC,eAAe,GAAGD,KAAK,CAACE,aAAN,CAAoBC,CAApB,IAAyB,gCAAzB,GAA4D,kCAApF,CAF0B,CAI1B;;AACA,QAAMC,uBAAuB,GAAGJ,KAAK,CAACK,MAAN,CAAaC,GAAb,CAAkB,CAACC,YAAD,EAAeJ,CAAf,KAAqB;AACrE,wBACE;AACE,MAAA,SAAS,EAAEH,KAAK,CAACE,aAAN,CAAoBC,CAApB,IAAyB,mBAAzB,GAA+C,qBAD5D,CAEE;AACA;AAHF;AAIE,MAAA,OAAO,EAAG,MAAMH,KAAK,CAACQ,OAAN,CAAcD,YAAd,CAJlB;AAKE,MAAA,GAAG,EAAEA,YAAY,GAAGJ,CALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,MAAA,SAAS,EAAE,kBAAiBF,eAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAE+BA,eAF/B,oBAGE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,GAAG,EAAED,KAAK,CAACS,KAAN,CAAYN,CAAZ,CAFP;AAGE,MAAA,GAAG,EAAE,cAAcI,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAOE;AACE,MAAA,SAAS,EAAC,qBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKA,YAFL,CAPF,CAPF,CADF;AAuBD,GAxB+B,CAAhC;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,IAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,uBADH,CAFF,eAOE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEJ,KAAK,CAACK,MADhB;AAEE,IAAA,YAAY,EAAEL,KAAK,CAACU,YAFtB;AAGE,IAAA,SAAS,EAAEV,KAAK,CAACE,aAHnB;AAIE,IAAA,OAAO,EAAEF,KAAK,CAACQ,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAeE,oBAAC,gBAAD;AACE,IAAA,IAAI,EAAER,KAAK,CAACW,QADd;AAEE,IAAA,EAAE,EAAEX,KAAK,CAACY,MAFZ;AAGE,IAAA,eAAe,EAAEZ,KAAK,CAACa,UAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAqBE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,OAAO,EAAEb,KAAK,CAACc,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CArBF,CADF;AA+BD,CA/DD;;AAiEA,eAAef,UAAf","sourcesContent":["// SearchForm.js\n\n// WIP: keep refactoring the creating of the treatments icons list items\n\nimport React from 'react';\nimport Dropdown from './Dropdown/Dropdown'; \nimport CalendarDropdown from './CalendarDropdown/CalendarDropdown';\n\nconst SearchForm = props => {\n\n  const isActiveToggler = props.isActiveArray[i] ? 'treatment-btn active-treatment' : 'treatment-btn inactive-treatment';\n\n  // Create the treatment-icons list items\n  const treatmentIconsListItems = props.labels.map( (currentLabel, i) => {\n    return (\n      <li \n        className={props.isActiveArray[i] ? ' active-treatment' : ' inactive-treatment'}\n        // the passed function uses the passed label \n        // to identify the treatment btn that has been clicked\n        onClick={ () => props.onClick(currentLabel)}\n        key={currentLabel + i}\n      >\n        <button\n          className={\"treatment-btn\" +isActiveToggler}>\n          className=treatment-btn \" + {isActiveToggler}>\n          <img \n            className=\"treatment-btn-icon\"\n            src={props.icons[i]} \n            alt={\"Icon For \" + currentLabel} />\n          <span \n            className=\"treatment-btn-label\">\n              {currentLabel}\n          </span>\n        </button>  \n\n      </li>\n    );\n  });\n\n\n  return(\n    <div className=\"SearchForm\">\n\n      <ul className=\"SearchForm__treatmentIconsList\">\n        {treatmentIconsListItems}\n      </ul>\n\n      {/* Render a Dropdown and pass it some props */}\n      <Dropdown \n        labels={props.labels}\n        chosenLabels={props.activeLabels}\n        isChecked={props.isActiveArray}\n        onClick={props.onClick}\n      />\n\n      {/* Render the CalendarDropdown component that contains a SingleDatePicker */}\n      <CalendarDropdown \n        from={props.fromDate}\n        to={props.toDate}\n        handleDateClick={props.onDatePick}\n      />\n\n      <div \n        className=\"SubmitButton-wrapper\"\n        onClick={props.getSearchResults}\n        > \n          <span>Submit</span>\n      </div>\n\n    </div>\n  )\n}\n\nexport default SearchForm;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Search/StartSearch/TreatmentButton/TreatmentButton.js\";\nimport React from 'react';\nimport './TreatmentButton.css';\n\nconst TreatmentButton = props => {\n  // if the passed isChecked prop is true, set the state to 'active', else 'inactive'\n  // this will cause the icon to toggle black-and-white/color via css\n  let activeOrInactive = props.isChecked ? ' active' : ' inactive'; // make a meaningful shortcut for props.label\n\n  let clickedButton = props.label;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-wrapper\" + activeOrInactive,\n    onClick: () => props.onClick(clickedButton),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"treatment-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"treatment-icons\",\n    src: props.icon,\n    alt: \"Treatment Icon For \" + props.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"treatment-btn-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, props.label)));\n};\n\nexport default TreatmentButton;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/StartSearch/TreatmentButton/TreatmentButton.js"],"names":["React","TreatmentButton","props","activeOrInactive","isChecked","clickedButton","label","onClick","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B;AACA;AACA,MAAIC,gBAAgB,GAAGD,KAAK,CAACE,SAAN,GAAkB,SAAlB,GAA8B,WAArD,CAH+B,CAK/B;;AACA,MAAIC,aAAa,GAAGH,KAAK,CAACI,KAA1B;AAEA,sBACE;AACE,IAAA,SAAS,EAAE,mBAAmBH,gBADhC;AAEE,IAAA,OAAO,EAAG,MAAMD,KAAK,CAACK,OAAN,CAAcF,aAAd,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,GAAG,EAAEH,KAAK,CAACM,IAFb;AAGE,IAAA,GAAG,EAAE,wBAAwBN,KAAK,CAACI,KAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AACE,IAAA,SAAS,EAAC,qBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGJ,KAAK,CAACI,KAFT,CALF,CAHF,CADF;AAgBD,CAxBD;;AA0BA,eAAeL,eAAf","sourcesContent":["import React from 'react';\nimport './TreatmentButton.css';\n\nconst TreatmentButton = props => {  \n  // if the passed isChecked prop is true, set the state to 'active', else 'inactive'\n  // this will cause the icon to toggle black-and-white/color via css\n  let activeOrInactive = props.isChecked ? ' active' : ' inactive'\n\n  // make a meaningful shortcut for props.label\n  let clickedButton = props.label;\n\n  return(\n    <div  \n      className={\"button-wrapper\" + activeOrInactive}\n      onClick={ () => props.onClick(clickedButton) }>   \n      <button className=\"treatment-btn\">\n        <img \n          className=\"treatment-icons\"\n          src={props.icon} \n          alt={\"Treatment Icon For \" + props.label} />\n        <span \n          className=\"treatment-btn-label\">\n          {props.label}\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default TreatmentButton;\n"]},"metadata":{},"sourceType":"module"}
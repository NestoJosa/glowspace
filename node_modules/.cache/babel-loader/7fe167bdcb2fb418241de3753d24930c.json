{"ast":null,"code":"import _classCallCheck from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import smoothscroll from'smoothscroll-polyfill';import SaloonCard from'./SaloonCard';// kick off the polyfill!\n// this is a a smoothScroll requirement:\n// https://www.npmjs.com/package/smoothscroll-polyfill\nsmoothscroll.polyfill();var SaloonCardContainer=/*#__PURE__*/function(_React$Component){_inherits(SaloonCardContainer,_React$Component);var _super=_createSuper(SaloonCardContainer);function SaloonCardContainer(props){var _this;_classCallCheck(this,SaloonCardContainer);_this=_super.call(this,props);// maximized represents the saloon body either being maximized (showing all treatments)\n// or minimized (only a few treatments shown)\n_this.state={maximized:false};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}_createClass(SaloonCardContainer,[{key:\"handleClick\",value:function handleClick(){// scroll to the saloon card when user closes the full treatment list\nif(this.state.maximized===true){this.node.scrollIntoView({behavior:'smooth'});};this.setState({maximized:!this.state.maximized});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"saloon-card\",ref:function ref(node){return _this2.node=node;}},/*#__PURE__*/React.createElement(SaloonCard,{saloon:this.props.saloon,treatmentsList:this.props.treatmentsList,maximized:this.state.maximized,onClick:this.handleClick}));}}]);return SaloonCardContainer;}(React.Component);;export default SaloonCardContainer;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchResults/SaloonCard/SaloonCardContainer.js"],"names":["React","smoothscroll","SaloonCard","polyfill","SaloonCardContainer","props","state","maximized","handleClick","bind","node","scrollIntoView","behavior","setState","saloon","treatmentsList","Component"],"mappings":"uwBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA;AACA;AACA;AACAD,YAAY,CAACE,QAAb,G,GAEMC,CAAAA,mB,sIACJ,6BAAYC,KAAZ,CAAmB,qDACjB,uBAAMA,KAAN,EACA;AACA;AACA,MAAKC,KAAL,CAAa,CAAEC,SAAS,CAAE,KAAb,CAAb,CACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CALiB,aAMlB,C,iFAEa,CACZ;AACA,GAAI,KAAKH,KAAL,CAAWC,SAAX,GAAyB,IAA7B,CAAmC,CACjC,KAAKG,IAAL,CAAUC,cAAV,CAAyB,CAACC,QAAQ,CAAE,QAAX,CAAzB,EACD,EAED,KAAKC,QAAL,CAAc,CAAEN,SAAS,CAAE,CAAC,KAAKD,KAAL,CAAWC,SAAzB,CAAd,EACD,C,uCAEQ,iBACP,mBACE,2BAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAE,aAAAG,IAAI,QAAI,CAAA,MAAI,CAACA,IAAL,CAAYA,IAAhB,EAAtC,eACE,oBAAC,UAAD,EACE,MAAM,CAAE,KAAKL,KAAL,CAAWS,MADrB,CAEE,cAAc,CAAE,KAAKT,KAAL,CAAWU,cAF7B,CAGE,SAAS,CAAE,KAAKT,KAAL,CAAWC,SAHxB,CAIE,OAAO,CAAE,KAAKC,WAJhB,EADF,CADF,CAUD,C,iCA7B+BR,KAAK,CAACgB,S,EA8BvC,CAID,cAAeZ,CAAAA,mBAAf","sourcesContent":["import React from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport SaloonCard from './SaloonCard';\n\n// kick off the polyfill!\n// this is a a smoothScroll requirement:\n// https://www.npmjs.com/package/smoothscroll-polyfill\nsmoothscroll.polyfill();\n\nclass SaloonCardContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    // maximized represents the saloon body either being maximized (showing all treatments)\n    // or minimized (only a few treatments shown)\n    this.state = { maximized: false };\n    this.handleClick = this.handleClick.bind(this);\n  };\n\n  handleClick() {\n    // scroll to the saloon card when user closes the full treatment list\n    if (this.state.maximized === true) {\n      this.node.scrollIntoView({behavior: 'smooth'})  \n    };\n  \n    this.setState({ maximized: !this.state.maximized });\n  };\n\n  render() {\n    return(\n      <div className=\"saloon-card\" ref={node => this.node = node }>\n        <SaloonCard \n          saloon={this.props.saloon}\n          treatmentsList={this.props.treatmentsList}\n          maximized={this.state.maximized}\n          onClick={this.handleClick}\n        />\n      </div>\n    );\n  };\n};\n\n\n\nexport default SaloonCardContainer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import{Formik,Field,Form,ErrorMessage}from'formik';import*as Yup from'yup';/* The Error Messages */var contactFormSchema=Yup.object({name:Yup.string().max(30,'Max 30 tegn').required('Udfyld et navn'),email:Yup.string().email('Dobbeltjek din email').required('Udfyld en email')});var ContactForm=function ContactForm(){return/*#__PURE__*/React.createElement(\"div\",{className:\"ContactForm\"},/*#__PURE__*/React.createElement(\"p\",{className:\"ContactForm__heading\"},\"Vil du h\\xF8re mere om, hvordan du f\\xE5r din salon p\\xE5 Glowspace?\"),/*#__PURE__*/React.createElement(Formik,{initialValues:{name:'',email:''},validationSchema:contactFormSchema,onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;var name=JSON.stringify(values.name);var email=JSON.stringify(values.email);fetch(\"/api/send-email?name=\".concat(encodeURIComponent(name),\"&email=\").concat(encodeURIComponent(email))).then(function(response){return response.json();}).then(function(response){return console.log(response);});setSubmitting(false);}},/*#__PURE__*/React.createElement(Form,{className:\"ContactForm__form\"},/*#__PURE__*/React.createElement(Field,{name:\"name\",type:\"text\",placeholder:\"Udfyld dit navn\",className:\"ContactForm__nameInput\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"name\",component:\"div\",className:\"ContactForm__errorMessage\"}),/*#__PURE__*/React.createElement(Field,{name:\"email\",type:\"email\",placeholder:\"Og din email\",className:\"ContactForm__emailInput\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"email\",component:\"div\",className:\"ContactForm__errorMessage\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"ContactForm__submitButton\"},\"send\"))));};export default ContactForm;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/ContactForm/ContactForm.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","contactFormSchema","object","name","string","max","required","email","ContactForm","values","setSubmitting","JSON","stringify","fetch","encodeURIComponent","then","response","json","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,CAA8BC,YAA9B,KAAkD,QAAlD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA,wBACA,GAAMC,CAAAA,iBAAiB,CAAGD,GAAG,CAACE,MAAJ,CAAW,CACnCC,IAAI,CAAEH,GAAG,CAACI,MAAJ,GACHC,GADG,CACC,EADD,CACK,aADL,EAEHC,QAFG,CAEM,gBAFN,CAD6B,CAInCC,KAAK,CAAEP,GAAG,CAACI,MAAJ,GACJG,KADI,CACE,sBADF,EAEJD,QAFI,CAEK,iBAFL,CAJ4B,CAAX,CAA1B,CASA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,mBACE,2BAAK,SAAS,CAAC,aAAf,eACE,yBAAG,SAAS,CAAC,sBAAb,yEADF,cAEE,oBAAC,MAAD,EACE,aAAa,CAAE,CAAEL,IAAI,CAAE,EAAR,CAAYI,KAAK,CAAE,EAAnB,CADjB,CAEE,gBAAgB,CAAEN,iBAFpB,CAGE,QAAQ,CAAE,kBAACQ,MAAD,MAA+B,IAApBC,CAAAA,aAAoB,MAApBA,aAAoB,CACvC,GAAIP,CAAAA,IAAI,CAAGQ,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACN,IAAtB,CAAX,CACA,GAAII,CAAAA,KAAK,CAAGI,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACF,KAAtB,CAAZ,CACAM,KAAK,gCAAyBC,kBAAkB,CAACX,IAAD,CAA3C,mBAA2DW,kBAAkB,CAACP,KAAD,CAA7E,EAAL,CACCQ,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAC,QAAQ,QAAIE,CAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAAJ,EAFd,EAGAN,aAAa,CAAC,KAAD,CAAb,CACD,CAVH,eAYE,oBAAC,IAAD,EAAM,SAAS,CAAC,mBAAhB,eACE,oBAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,iBAHd,CAIE,SAAS,CAAC,wBAJZ,EADF,cAOE,oBAAC,YAAD,EACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,KAFZ,CAGE,SAAS,CAAC,2BAHZ,EAPF,cAYE,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,cAHd,CAIE,SAAS,CAAC,yBAJZ,EAZF,cAkBE,oBAAC,YAAD,EACE,IAAI,CAAC,OADP,CAEE,SAAS,CAAC,KAFZ,CAGE,SAAS,CAAC,2BAHZ,EAlBF,cAuBE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,2BAFZ,SAvBF,CAZF,CAFF,CADF,CA+CD,CAhDD,CAkDA,cAAeF,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n/* The Error Messages */\nconst contactFormSchema = Yup.object({\n  name: Yup.string()\n    .max(30, 'Max 30 tegn')\n    .required('Udfyld et navn'),\n  email: Yup.string()\n    .email('Dobbeltjek din email')\n    .required('Udfyld en email'),\n});\n\nconst ContactForm = () => {\n  return (\n    <div className=\"ContactForm\">\n      <p className=\"ContactForm__heading\">Vil du høre mere om, hvordan du får din salon på Glowspace?</p>\n      <Formik\n        initialValues={{ name: '', email: '' }}\n        validationSchema={contactFormSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          let name = JSON.stringify(values.name);\n          let email = JSON.stringify(values.email);\n          fetch(`/api/send-email?name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}`)\n          .then(response => response.json())\n          .then(response => console.log(response));\n          setSubmitting(false);\n        }}\n      >\n        <Form className=\"ContactForm__form\">\n          <Field \n            name=\"name\" \n            type=\"text\" \n            placeholder=\"Udfyld dit navn\"\n            className=\"ContactForm__nameInput\" \n          />\n          <ErrorMessage \n            name=\"name\"\n            component=\"div\" \n            className=\"ContactForm__errorMessage\"  \n          />\n          <Field \n            name=\"email\" \n            type=\"email\" \n            placeholder=\"Og din email\"\n            className=\"ContactForm__emailInput\" \n          />\n          <ErrorMessage \n            name=\"email\"\n            component=\"div\" \n            className=\"ContactForm__errorMessage\"  \n          />\n          <button \n            type=\"submit\"\n            className=\"ContactForm__submitButton\">\n              send\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}
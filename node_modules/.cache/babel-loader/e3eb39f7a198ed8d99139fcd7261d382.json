{"ast":null,"code":"/* \n\n  This components only job is to take a date string e.g.:\n  2020-02-04 10:00:00\n  <yyyy-mm-dd h-m-ms>\n\n  and return a new more readable date string, ex:\n  \"Tirsdag d. 4 Feb. kl 10.00\"\n\n*/\nconst formatDate = props => {\n  let input = props.dateString; // => e.g. \"2020-02-04 10:00:00\"\n  // Exchange the dashes in the date for slashes,\n  // this is needed for the subsequent \"new Date\"\" call to work in Safari\n  // e.g. \"2020-02-04 10:00:00\" to \"2020/02/04 10:00:00\"\n  // split the date string into an array of two elements: date and time\n\n  let splittedDateStr = input.split(\" \"); // split the date element into an array\n\n  let splittedDate = splittedDateStr[0].split(\"-\"); // join back the splitted date into a string seperated by a dash\n\n  let joinedDate = splittedDate.join(\"/\"); // concatenate the date with the time\n\n  let dateStrWithSlashes = joinedDate + \" \" + splittedDateStr[1]; // Convert the date in numbers, to a date including a weekday and month:\n  // e.g. \"2020/02/04 10:00:00\" => \"tirsdag 4. feb. 10.00\"\n\n  const options = {\n    weekday: 'long',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  const readableDate = new Date(dateStrWithSlashes).toLocaleDateString('da-DK', options); // Make a nicer date: e.g. \"tirsdag 4. feb. 10.00\" => \"Tirsdag d. 4 Feb. kl 10.00\"\n\n  const dateArr = readableDate.split(' '); // Cap the first letter of weekday\n\n  dateArr[0] = dateArr[0].charAt(0).toUpperCase() + dateArr[0].substring(1); // Add a \"d.\" after the weekday, before the day number\n\n  dateArr.splice(1, 0, 'd.'); // Remove the ending dot from the day number ex: \"15.\" to \"15\"\n\n  dateArr[2] = dateArr[2].substring(0, dateArr[2].length - 1); // Cap the first letter of month\n\n  dateArr[3] = dateArr[3].charAt(0).toUpperCase() + dateArr[3].substring(1); // Add a \"kl\" after the month, before the hour\n\n  dateArr.splice(4, 0, 'kl'); // Convert the array back into a string\n\n  const output = dateArr.join(\" \");\n  return output; // => e.g. \"Tirsdag d. 4 Feb. kl 10.00\"\n};\n\nexport default FormatDate;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchResults/Utils/formatDate.js"],"names":["formatDate","props","input","dateString","splittedDateStr","split","splittedDate","joinedDate","join","dateStrWithSlashes","options","weekday","month","day","hour","minute","readableDate","Date","toLocaleDateString","dateArr","charAt","toUpperCase","substring","splice","length","output","FormatDate"],"mappings":"AAAA;;;;;;;;;;AAWA,MAAMA,UAAU,GAAGC,KAAK,IAAI;AAC1B,MAAIC,KAAK,GAAGD,KAAK,CAACE,UAAlB,CAD0B,CAE1B;AAEA;AACA;AACA;AAEA;;AACA,MAAIC,eAAe,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAtB,CAT0B,CAU1B;;AACA,MAAIC,YAAY,GAAGF,eAAe,CAAC,CAAD,CAAf,CAAmBC,KAAnB,CAAyB,GAAzB,CAAnB,CAX0B,CAY1B;;AACA,MAAIE,UAAU,GAAGD,YAAY,CAACE,IAAb,CAAkB,GAAlB,CAAjB,CAb0B,CAc1B;;AACA,MAAIC,kBAAkB,GAAGF,UAAU,GAAG,GAAb,GAAmBH,eAAe,CAAC,CAAD,CAA3D,CAf0B,CAiB1B;AACA;;AACA,QAAMM,OAAO,GACP;AAACC,IAAAA,OAAO,EAAE,MAAV;AAAkBC,IAAAA,KAAK,EAAE,OAAzB;AAAkCC,IAAAA,GAAG,EAAE,SAAvC;AAAkDC,IAAAA,IAAI,EAAE,SAAxD;AAAmEC,IAAAA,MAAM,EAAE;AAA3E,GADN;AAEA,QAAMC,YAAY,GAAG,IAAIC,IAAJ,CAASR,kBAAT,EAA6BS,kBAA7B,CAAgD,OAAhD,EAAyDR,OAAzD,CAArB,CArB0B,CAuB1B;;AACA,QAAMS,OAAO,GAAGH,YAAY,CAACX,KAAb,CAAmB,GAAnB,CAAhB,CAxB0B,CAyB1B;;AACAc,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCF,OAAO,CAAC,CAAD,CAAP,CAAWG,SAAX,CAAqB,CAArB,CAAlD,CA1B0B,CA2B1B;;AACAH,EAAAA,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAArB,EA5B0B,CA6B1B;;AACAJ,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWG,SAAX,CAAqB,CAArB,EAAwBH,OAAO,CAAC,CAAD,CAAP,CAAWK,MAAX,GAAmB,CAA3C,CAAb,CA9B0B,CA+B1B;;AACAL,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCF,OAAO,CAAC,CAAD,CAAP,CAAWG,SAAX,CAAqB,CAArB,CAAlD,CAhC0B,CAiC1B;;AACAH,EAAAA,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAArB,EAlC0B,CAmC1B;;AACA,QAAME,MAAM,GAAGN,OAAO,CAACX,IAAR,CAAa,GAAb,CAAf;AAEA,SAAOiB,MAAP,CAtC0B,CAsCX;AAChB,CAvCD;;AAyCA,eAAeC,UAAf","sourcesContent":["/* \n\n  This components only job is to take a date string e.g.:\n  2020-02-04 10:00:00\n  <yyyy-mm-dd h-m-ms>\n\n  and return a new more readable date string, ex:\n  \"Tirsdag d. 4 Feb. kl 10.00\"\n\n*/\n\nconst formatDate = props => {\n  let input = props.dateString;\n  // => e.g. \"2020-02-04 10:00:00\"\n\n  // Exchange the dashes in the date for slashes,\n  // this is needed for the subsequent \"new Date\"\" call to work in Safari\n  // e.g. \"2020-02-04 10:00:00\" to \"2020/02/04 10:00:00\"\n\n  // split the date string into an array of two elements: date and time\n  let splittedDateStr = input.split(\" \");\n  // split the date element into an array\n  let splittedDate = splittedDateStr[0].split(\"-\")\n  // join back the splitted date into a string seperated by a dash\n  let joinedDate = splittedDate.join(\"/\");\n  // concatenate the date with the time\n  let dateStrWithSlashes = joinedDate + \" \" + splittedDateStr[1];\n\n  // Convert the date in numbers, to a date including a weekday and month:\n  // e.g. \"2020/02/04 10:00:00\" => \"tirsdag 4. feb. 10.00\"\n  const options = \n        {weekday: 'long', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'};\n  const readableDate = new Date(dateStrWithSlashes).toLocaleDateString('da-DK', options);\n\n  // Make a nicer date: e.g. \"tirsdag 4. feb. 10.00\" => \"Tirsdag d. 4 Feb. kl 10.00\"\n  const dateArr = readableDate.split(' ');\n  // Cap the first letter of weekday\n  dateArr[0] = dateArr[0].charAt(0).toUpperCase() + dateArr[0].substring(1);\n  // Add a \"d.\" after the weekday, before the day number\n  dateArr.splice(1, 0, 'd.');\n  // Remove the ending dot from the day number ex: \"15.\" to \"15\"\n  dateArr[2] = dateArr[2].substring(0, dateArr[2].length -1);\n  // Cap the first letter of month\n  dateArr[3] = dateArr[3].charAt(0).toUpperCase() + dateArr[3].substring(1);\n  // Add a \"kl\" after the month, before the hour\n  dateArr.splice(4, 0, 'kl');\n  // Convert the array back into a string\n  const output = dateArr.join(\" \")\n\n  return output; // => e.g. \"Tirsdag d. 4 Feb. kl 10.00\"\n};\n\nexport default FormatDate;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/Dropdown/DropdownContainer.js\";\n// DropdownContainer.js\nimport React, { Component } from 'react';\nimport Dropdown from './Dropdown';\n\nclass DropdownContainer extends Component {\n  constructor(props) {\n    super(props);\n    const label = this.props.label ? this.props.label : 'Choose here';\n    this.state = {\n      label: this.props.label,\n      isActive: false\n    }; // binder\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideWrapperClick = this.handleOutsideWrapperClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.state.isActive) {\n      document.addEventListener('click', this.handleOutsideWrapperClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideWrapperClick, false);\n    }\n\n    this.setState({\n      isActive: !this.state.isActive\n    });\n  }\n\n  handleOutsideWrapperClick(e) {\n    // do nothing if click on wrapper\n    if (this.node.contains(e.target)) {\n      return;\n    } else {\n      this.handleClick();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DropdownWrapper\",\n      ref: node => {\n        this.node = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      label: this.state.label,\n      isActive: this.state.isActive,\n      onClick: this.handleClick,\n      body: this.props.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default DropdownContainer;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/Dropdown/DropdownContainer.js"],"names":["React","Component","Dropdown","DropdownContainer","constructor","props","label","state","isActive","handleClick","bind","handleOutsideWrapperClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","render","body"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAN,SAAgCF,SAAhC,CAA0C;AACxCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAA9B,GAAsC,aAApD;AACA,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADP;AAEXE,MAAAA,QAAQ,EAAE;AAFC,KAAb,CAHiB,CAOjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BD,IAA/B,CAAoC,IAApC,CAAjC;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,KAAKF,KAAL,CAAWC,QAAhB,EAA0B;AACxBI,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKF,yBAAxC,EAAmE,KAAnE;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKH,yBAA3C,EAAsE,KAAtE;AACD;;AACD,SAAKI,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,KAAd;AACD;;AAEDG,EAAAA,yBAAyB,CAACK,CAAD,EAAI;AAC3B;AACA,QAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAChC;AACD,KAFD,MAEO;AACL,WAAKV,WAAL;AACD;AACF;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,GAAG,EAAEH,IAAI,IAAI;AAAE,aAAKA,IAAL,GAAYA,IAAZ;AAAmB,OAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWD,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAFvB;AAGE,MAAA,OAAO,EAAE,KAAKC,WAHhB;AAIE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWgB,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF;AAWD;;AA3CuC;;AA8C1C,eAAelB,iBAAf","sourcesContent":["// DropdownContainer.js\n\nimport React, { Component } from 'react';\nimport Dropdown from './Dropdown';\n\nclass DropdownContainer extends Component {\n  constructor(props) {\n    super(props);\n    const label = this.props.label ? this.props.label : 'Choose here'\n    this.state = {\n      label: this.props.label,\n      isActive: false,\n    }\n    // binder\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideWrapperClick = this.handleOutsideWrapperClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.state.isActive) {\n      document.addEventListener('click', this.handleOutsideWrapperClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideWrapperClick, false);\n    }\n    this.setState({ isActive: !this.state.isActive })\n  }\n\n  handleOutsideWrapperClick(e) {\n    // do nothing if click on wrapper\n    if (this.node.contains(e.target)) { \n      return; \n    } else {\n      this.handleClick();\n    }\n  }\n\n  render() {\n    return(\n      <div \n        className=\"DropdownWrapper\" \n        ref={node => { this.node = node; }}>  \n          <Dropdown \n            label={this.state.label}\n            isActive={this.state.isActive}\n            onClick={this.handleClick}\n            body={this.props.body} />\n      </div>\n    )\n  }\n}\n\nexport default DropdownContainer;"]},"metadata":{},"sourceType":"module"}
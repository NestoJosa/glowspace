{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchResults/SaloonCard/SaloonCardContainer.js\";\nimport React from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport SaloonCard from './SaloonCard'; // kick off the polyfill!\n// this is a a smoothScroll requirement:\n// https://www.npmjs.com/package/smoothscroll-polyfill\n\nsmoothscroll.polyfill();\n\nclass SaloonCardContainer extends React.Component {\n  constructor(props) {\n    super(props); // maximized represents the saloon body either being maximized (showing all treatments)\n    // or minimized (only a few treatments shown)\n\n    this.state = {\n      maximized: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    // scroll to the saloon card when user closes the full treatment list\n    if (this.state.maximized === true) {\n      this.node.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n\n    ;\n    this.setState({\n      maximized: !this.state.maximized\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"saloon-card\",\n      ref: node => this.node = node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SaloonCard, {\n      someProp: \"hello\",\n      maximized: this.props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default SaloonCardContainer;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchResults/SaloonCard/SaloonCardContainer.js"],"names":["React","smoothscroll","SaloonCard","polyfill","SaloonCardContainer","Component","constructor","props","state","maximized","handleClick","bind","node","scrollIntoView","behavior","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;AACA;AACA;;AACAD,YAAY,CAACE,QAAb;;AAEA,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ;AACA,QAAI,KAAKF,KAAL,CAAWC,SAAX,KAAyB,IAA7B,EAAmC;AACjC,WAAKG,IAAL,CAAUC,cAAV,CAAyB;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAzB;AACD;;AAAA;AAED,SAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,KAAd;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEJ,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAC,OADX;AAEE,MAAA,SAAS,EAAE,KAAKL,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AA3B+C;;AA4BjD;AAID,eAAeH,mBAAf","sourcesContent":["import React from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport SaloonCard from './SaloonCard';\n\n// kick off the polyfill!\n// this is a a smoothScroll requirement:\n// https://www.npmjs.com/package/smoothscroll-polyfill\nsmoothscroll.polyfill();\n\nclass SaloonCardContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    // maximized represents the saloon body either being maximized (showing all treatments)\n    // or minimized (only a few treatments shown)\n    this.state = { maximized: false };\n    this.handleClick = this.handleClick.bind(this);\n  };\n\n  handleClick() {\n    // scroll to the saloon card when user closes the full treatment list\n    if (this.state.maximized === true) {\n      this.node.scrollIntoView({behavior: 'smooth'})  \n    };\n  \n    this.setState({ maximized: !this.state.maximized });\n  };\n\n  render() {\n    return(\n      <div className=\"saloon-card\" ref={node => this.node = node }>\n        <SaloonCard \n          someProp=\"hello\"\n          maximized={this.props}\n        />\n      </div>\n    );\n  };\n};\n\n\n\nexport default SaloonCardContainer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// Nav.js\nimport React from'react';import NavLogo from'./NavLogo/NavLogo';import{HamburgerSqueeze as NavBurger}from'react-animated-burgers';import NavMenu from'./NavMenu/NavMenu';var Nav=/*#__PURE__*/function(_React$Component){_inherits(Nav,_React$Component);var _super=_createSuper(Nav);function Nav(props){var _this;_classCallCheck(this,Nav);_this=_super.call(this,props);// the menus is closed as default\n_this.state={isOpen:false};// binders\n_this.handleLogoClick=_this.handleLogoClick.bind(_assertThisInitialized(_this));_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.handleOutsideClick=_this.handleOutsideClick.bind(_assertThisInitialized(_this));return _this;}_createClass(Nav,[{key:\"handleLogoClick\",value:function handleLogoClick(){// if the menu is open, call handleClick\nif(this.state.isOpen){this.handleClick();}}},{key:\"handleClick\",value:function handleClick(){// before toggling the isOpen state, check if the menu is open/closed\n// in order to add/remove the eventhandler that is responsible for \n// checking if users clicks outside/inside of the nav bar and menu\n// so that we can close the menu if users clicks outside of nav\nif(!this.state.isOpen){document.addEventListener('click',this.handleOutsideClick,false);}else{document.removeEventListener('click',this.handleOutsideClick,false);}// toggle the state, which in turn closes/opens the menu\nthis.setState({isOpen:!this.state.isOpen});}},{key:\"handleOutsideClick\",value:function handleOutsideClick(e){// dont do anyting if user clicked on nav\nif(this.node.contains(e.target)){return;}// call handleClick to remove handler and close the menu\nthis.handleClick();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/ (/* wip: Nav--horizontal is not done */React.createElement(\"div\",{className:\"Nav Nav--horizontal\"// needed to track clicks outside of nav\n,ref:function ref(node){_this2.node=node;}},/*#__PURE__*/React.createElement(\"div\",{className:\"Nav__logo\"},/*#__PURE__*/React.createElement(NavLogo,{onClick:this.handleLogoClick})),/*#__PURE__*/React.createElement(\"div\",{className:\"Nav__burger\"},/*#__PURE__*/React.createElement(NavBurger,{isActive:this.state.isOpen,barColor:\"white\",toggleButton:this.handleClick,buttonStyle:{padding:\"0\"},buttonWidth:36})),/*#__PURE__*/React.createElement(\"div\",{className:\"Nav__menu\"},/*#__PURE__*/React.createElement(NavMenu,{isOpen:this.state.isOpen,onClick:this.handleClick}))));}}]);return Nav;}(React.Component);export default Nav;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Nav/Nav.js"],"names":["React","NavLogo","HamburgerSqueeze","NavBurger","NavMenu","Nav","props","state","isOpen","handleLogoClick","bind","handleClick","handleOutsideClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","padding","Component"],"mappings":"uwBAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,gBAAgB,GAAIC,CAAAA,SAA7B,KAA8C,wBAA9C,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,GAGMC,CAAAA,G,sGACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EACA;AACA,MAAKC,KAAL,CAAa,CAAEC,MAAM,CAAE,KAAV,CAAb,CAEA;AACA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB,CACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB,CACA,MAAKE,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBF,IAAxB,+BAA1B,CARiB,aASlB,C,yEAEiB,CAChB;AACA,GAAI,KAAKH,KAAL,CAAWC,MAAf,CAAuB,CAAE,KAAKG,WAAL,GAAqB,CAC/C,C,iDAEa,CACZ;AACA;AACA;AACA;AACA,GAAI,CAAC,KAAKJ,KAAL,CAAWC,MAAhB,CAAwB,CACtBK,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,KAAKF,kBAAxC,CAA4D,KAA5D,EACD,CAFD,IAEO,CACLC,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,CAAsC,KAAKH,kBAA3C,CAA+D,KAA/D,EACD,CACD;AACA,KAAKI,QAAL,CAAc,CAAER,MAAM,CAAE,CAAC,KAAKD,KAAL,CAAWC,MAAtB,CAAd,EACD,C,8DAEkBS,C,CAAG,CACpB;AACA,GAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,CAAkC,CAAE,OAAS,CAC7C;AACA,KAAKT,WAAL,GACD,C,uCAEQ,iBACP,oBACE,uCACA,2BACE,SAAS,CAAC,qBACV;AAFF,CAGE,GAAG,CAAE,aAAAO,IAAI,CAAI,CAAE,MAAI,CAACA,IAAL,CAAYA,IAAZ,CAAmB,CAHpC,eAMI,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,OAAD,EAAS,OAAO,CAAE,KAAKT,eAAvB,EADF,CANJ,cAUI,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,SAAD,EACE,QAAQ,CAAE,KAAKF,KAAL,CAAWC,MADvB,CAEE,QAAQ,CAAC,OAFX,CAGE,YAAY,CAAE,KAAKG,WAHrB,CAIE,WAAW,CAAE,CAAEU,OAAO,CAAE,GAAX,CAJf,CAKE,WAAW,CAAE,EALf,EADF,CAVJ,cAoBI,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,OAAD,EACE,MAAM,CAAE,KAAKd,KAAL,CAAWC,MADrB,CAEE,OAAO,CAAE,KAAKG,WAFhB,EADF,CApBJ,CAFF,EA+BD,C,iBAtEeX,KAAK,CAACsB,S,EAyExB,cAAejB,CAAAA,GAAf","sourcesContent":["// Nav.js\n\nimport React from 'react';\nimport NavLogo from './NavLogo/NavLogo';\nimport { HamburgerSqueeze as NavBurger } from 'react-animated-burgers'\nimport NavMenu from './NavMenu/NavMenu';\n\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    // the menus is closed as default\n    this.state = { isOpen: false }\n    \n    // binders\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // if the menu is open, call handleClick\n    if (this.state.isOpen) { this.handleClick(); }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n    // toggle the state, which in turn closes/opens the menu\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) { return; }\n    // call handleClick to remove handler and close the menu\n    this.handleClick();\n  }\n  \n  render() {\n    return(\n      /* wip: Nav--horizontal is not done */\n      <div\n        className=\"Nav Nav--horizontal\"\n        // needed to track clicks outside of nav\n        ref={node => { this.node = node; }}>\n        \n               \n          <div className=\"Nav__logo\">\n            <NavLogo onClick={this.handleLogoClick} />\n          </div>\n\n          <div className=\"Nav__burger\">\n            <NavBurger\n              isActive={this.state.isOpen} \n              barColor=\"white\"\n              toggleButton={this.handleClick}\n              buttonStyle={{ padding: \"0\" }}\n              buttonWidth={36}\n            />\n          </div>\n\n          <div className=\"Nav__menu\">\n            <NavMenu \n              isOpen={this.state.isOpen}\n              onClick={this.handleClick}\n            />\n          </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}
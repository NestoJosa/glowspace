{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/containers/SearchContainer.js\";\nimport React from 'react';\nimport StartSearchContainer from './StartSearchContainer';\nimport ProcessSearchResults from '../components/Search/ProcessSearchResults/ProcessSearchResults';\nimport GetSearchString from '../components/Search/GetSearchString/GetSearchString';\n\nclass SearchContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: null,\n      lat: null,\n      lon: null\n    };\n    this.getSearchResults = this.getSearchResults.bind(this);\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      // the arrow-success-func is a required func for the \n      // getCurrentPosition method and takes a position object only\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      });\n    }\n\n    ;\n  }\n\n  getSearchResults(searchParams) {\n    // get a formatted string for the api from the passed search params\n    let stringForApi = GetSearchString(searchParams);\n    fetch(stringForApi).then(res => res.json()).then(data => {\n      this.setState({\n        searchResults: data\n      });\n    }) // Log any errors to the console\n    .catch(console.log);\n  }\n\n  render() {\n    let test = 1;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Search-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StartSearchContainer, {\n      getSearchResults: this.getSearchResults,\n      justATest: test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProcessSearchResults, {\n      UnProcessedData: this.state.searchResults,\n      clientCoordinates: {\n        'clientLatitude': this.state.lat,\n        'clientLongitude': this.state.lon\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default SearchContainer;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/containers/SearchContainer.js"],"names":["React","StartSearchContainer","ProcessSearchResults","GetSearchString","SearchContainer","Component","constructor","props","state","searchResults","lat","lon","getSearchResults","bind","componentDidMount","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","searchParams","stringForApi","fetch","then","res","json","data","catch","console","log","render","test"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,gEAAjC;AACA,OAAOC,eAAP,MAA4B,sDAA5B;;AAEA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,GAAG,EAAE,IAFM;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzB;AACA;AACAD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA2CC,QAAD,IAAc;AACtD,aAAKC,QAAL,CAAc;AACZT,UAAAA,GAAG,EAAEQ,QAAQ,CAACE,MAAT,CAAgBC,QADT;AAEZV,UAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBE;AAFT,SAAd;AAID,OALD;AAMD;;AAAA;AACF;;AAEDV,EAAAA,gBAAgB,CAACW,YAAD,EAAe;AAE7B;AACA,QAAIC,YAAY,GAAGrB,eAAe,CAACoB,YAAD,CAAlC;AAEAE,IAAAA,KAAK,CAACD,YAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAKV,QAAL,CAAc;AAAEV,QAAAA,aAAa,EAAEoB;AAAjB,OAAd;AACD,KAJH,EAKE;AALF,KAMGC,KANH,CAMSC,OAAO,CAACC,GANjB;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,CAAX;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,oBAAD;AACE,MAAA,gBAAgB,EAAE,KAAKtB,gBADzB;AAEE,MAAA,SAAS,EAAEsB,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,oBAAD;AACE,MAAA,eAAe,EAAE,KAAK1B,KAAL,CAAWC,aAD9B;AAEE,MAAA,iBAAiB,EAAE;AACjB,0BAAkB,KAAKD,KAAL,CAAWE,GADZ;AAEjB,2BAAmB,KAAKF,KAAL,CAAWG;AAFb,OAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAeD;;AAvD2C;;AAwD7C;AAED,eAAeP,eAAf","sourcesContent":["import React from 'react';\nimport StartSearchContainer from './StartSearchContainer';\nimport ProcessSearchResults from '../components/Search/ProcessSearchResults/ProcessSearchResults';\nimport GetSearchString from '../components/Search/GetSearchString/GetSearchString';\n\nclass SearchContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: null,\n      lat: null,\n      lon: null,\n    };\n    this.getSearchResults = this.getSearchResults.bind(this);\n  };\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      // the arrow-success-func is a required func for the \n      // getCurrentPosition method and takes a position object only\n      navigator.geolocation.getCurrentPosition( (position) => {\n        this.setState({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      });\n    };\n  };\n\n  getSearchResults(searchParams) {\n\n    // get a formatted string for the api from the passed search params\n    let stringForApi = GetSearchString(searchParams);\n\n    fetch(stringForApi)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ searchResults: data });\n      })\n      // Log any errors to the console\n      .catch(console.log)\n  };\n\n  render() {\n    let test = 1;\n    return(\n      <div className=\"Search-wrapper\">\n        <StartSearchContainer \n          getSearchResults={this.getSearchResults}\n          justATest={test}\n        />\n        <ProcessSearchResults \n          UnProcessedData={this.state.searchResults}\n          clientCoordinates={{ \n            'clientLatitude': this.state.lat,  \n            'clientLongitude': this.state.lon,  \n          }}\n        />\n      </div>\n    );\n  };\n};\n\nexport default SearchContainer;\n"]},"metadata":{},"sourceType":"module"}
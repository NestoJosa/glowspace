{"ast":null,"code":"import _classCallCheck from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import MultiSelect from'../MultiSelect/MultiSelect';import'./Dropdown.css';/* \n  Work In Progress (WIP):\n  - flip the icon onclick\n*/var Dropdown=/*#__PURE__*/function(_React$Component){_inherits(Dropdown,_React$Component);var _super=_createSuper(Dropdown);function Dropdown(props){var _this;_classCallCheck(this,Dropdown);_this=_super.call(this,props);_this.state={active:false};// binders: \n_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.handleOutsideClick=_this.handleOutsideClick.bind(_assertThisInitialized(_this));return _this;}_createClass(Dropdown,[{key:\"handleClick\",value:function handleClick(){if(!this.state.active){// attach/remove event handler\ndocument.addEventListener('click',this.handleOutsideClick,false);}else{document.removeEventListener('click',this.handleOutsideClick,false);}// toggle the states active prop\nthis.setState({active:!this.state.active});}},{key:\"handleOutsideClick\",value:function handleOutsideClick(e){// ignore clicks on the component itself\nif(this.node.contains(e.target)){return;}this.handleClick();}},{key:\"render\",value:function render(){var _this2=this;// toggle the visibility of the MultiSelect component\n// using the components state\nvar toggleVisibility=this.state.active?'':' hidden';var label='';// if the array containing the labels is empty,\n// it means there are no treatments chosen,\n// then we update the label to contain a custom msg\n// #refactor: the msg should come from the parent \n// for when different languages are introduced\nif(this.props.chosenLabels.length===0){label+='Vælg Behandling';}else{label+=\"\"+this.props.chosenLabels;}var toggleIcon=this.state.active?' rotate-icon':'';return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"Dropdown-wrapper\",onClick:function onClick(){return _this2.handleClick();}},/*#__PURE__*/React.createElement(\"span\",{className:\"Dropdown-label\"},label),/*#__PURE__*/React.createElement(\"i\",{className:\"Drowdown-icon\"+toggleIcon})),/*#__PURE__*/React.createElement(\"div\",{className:\"MultiSelect-wrapper\"+toggleVisibility,ref:function ref(node){_this2.node=node;}},/*#__PURE__*/React.createElement(MultiSelect,{labels:this.props.labels,isChecked:this.props.isChecked,onClick:this.props.onClick})));}}]);return Dropdown;}(React.Component);;export default Dropdown;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/StartSearch/Dropdown/Dropdown.js"],"names":["React","MultiSelect","Dropdown","props","state","active","handleClick","bind","handleOutsideClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","toggleVisibility","label","chosenLabels","length","toggleIcon","labels","isChecked","onClick","Component"],"mappings":"uwBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAO,gBAAP,CAEA;;;KAKMC,CAAAA,Q,gHACJ,kBAAYC,KAAZ,CAAmB,0CACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,MAAM,CAAE,KADG,CAAb,CAIA;AACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CACA,MAAKC,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,+BAA1B,CARiB,aASlB,C,sEAEa,CACZ,GAAI,CAAC,KAAKH,KAAL,CAAWC,MAAhB,CAAwB,CACtB;AACAI,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,KAAKF,kBAAxC,CAA4D,KAA5D,EACD,CAHD,IAGO,CACLC,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,CAAsC,KAAKH,kBAA3C,CAA+D,KAA/D,EACD,CAED;AACA,KAAKI,QAAL,CAAc,CACZP,MAAM,CAAE,CAAC,KAAKD,KAAL,CAAWC,MADR,CAAd,EAGD,C,8DAEkBQ,C,CAAG,CACpB;AACA,GAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,CAAkC,CAChC,OACD,CAED,KAAKV,WAAL,GACD,C,uCAEQ,iBACP;AACA;AACA,GAAIW,CAAAA,gBAAgB,CAAG,KAAKb,KAAL,CAAWC,MAAX,CAAoB,EAApB,CAAyB,SAAhD,CAEA,GAAIa,CAAAA,KAAK,CAAG,EAAZ,CACA;AACA;AACA;AACA;AACA;AACA,GAAI,KAAKf,KAAL,CAAWgB,YAAX,CAAwBC,MAAxB,GAAmC,CAAvC,CAA0C,CACxCF,KAAK,EAAG,iBAAR,CACD,CAFD,IAEO,CACLA,KAAK,EAAG,GAAK,KAAKf,KAAL,CAAWgB,YAAxB,CACD,CAED,GAAIE,CAAAA,UAAU,CAAG,KAAKjB,KAAL,CAAWC,MAAX,CAAoB,cAApB,CAAqC,EAAtD,CAEA,mBACE,4CACE,2BACE,SAAS,CAAC,kBADZ,CAEE,OAAO,CAAG,yBAAM,CAAA,MAAI,CAACC,WAAL,EAAN,EAFZ,eAIE,4BAAM,SAAS,CAAC,gBAAhB,EAAkCY,KAAlC,CAJF,cAKE,yBAAG,SAAS,CAAE,gBAAkBG,UAAhC,EALF,CADF,cAQE,2BACE,SAAS,CAAE,sBAAwBJ,gBADrC,CAEE,GAAG,CAAE,aAAAH,IAAI,CAAI,CAAE,MAAI,CAACA,IAAL,CAAYA,IAAZ,CAAmB,CAFpC,eAIE,oBAAC,WAAD,EACE,MAAM,CAAE,KAAKX,KAAL,CAAWmB,MADrB,CAEE,SAAS,CAAE,KAAKnB,KAAL,CAAWoB,SAFxB,CAGE,OAAO,CAAE,KAAKpB,KAAL,CAAWqB,OAHtB,EAJF,CARF,CADF,CAqBD,C,sBA3EoBxB,KAAK,CAACyB,S,EA4E5B,CAED,cAAevB,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport MultiSelect from '../MultiSelect/MultiSelect';\nimport './Dropdown.css';\n\n/* \n  Work In Progress (WIP):\n  - flip the icon onclick\n*/\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    // binders: \n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  };\n\n  handleClick() {\n    if (!this.state.active) {\n      // attach/remove event handler\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    // toggle the states active prop\n    this.setState({\n      active: !this.state.active\n    }) \n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    \n    this.handleClick();\n  }\n\n  render() {\n    // toggle the visibility of the MultiSelect component\n    // using the components state\n    let toggleVisibility = this.state.active ? '' : ' hidden';\n\n    let label = '';\n    // if the array containing the labels is empty,\n    // it means there are no treatments chosen,\n    // then we update the label to contain a custom msg\n    // #refactor: the msg should come from the parent \n    // for when different languages are introduced\n    if (this.props.chosenLabels.length === 0) {\n      label+= 'Vælg Behandling';\n    } else {\n      label+= \"\" + this.props.chosenLabels;\n    }\n\n    let toggleIcon = this.state.active ? ' rotate-icon' : '';\n\n    return(\n      <div>\n        <div \n          className=\"Dropdown-wrapper\"\n          onClick={ () => this.handleClick() }\n        >\n          <span className=\"Dropdown-label\">{label}</span>\n          <i className={\"Drowdown-icon\" + toggleIcon}></i>\n        </div>\n        <div \n          className={\"MultiSelect-wrapper\" + toggleVisibility}\n          ref={node => { this.node = node; }}\n          > \n          <MultiSelect \n            labels={this.props.labels}\n            isChecked={this.props.isChecked}\n            onClick={this.props.onClick}\n          />\n        </div> \n      </div>    \n    );\n  };\n};\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}
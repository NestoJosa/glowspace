{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/CalendarDropdown/CalendarDropdown.js\";\nimport React from 'react';\nimport DateRangePicker from '../DateRangePicker/DateRangePicker';\nimport { utils } from 'react-modern-calendar-datepicker';\nimport './CalendarDropdown.css';\n\nclass CalendarDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    }; // binders: \n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.state.active) {\n      // attach/remove event handler\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    } // toggle the states active prop\n\n\n    this.setState({\n      active: !this.state.active\n    });\n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.handleClick();\n  }\n\n  render() {\n    // toggle the visibility of the MultiSelect component\n    // using the components state\n    let toggleVisibility = this.state.active ? '' : ' hidden'; // make a label\n\n    let label = '';\n    let fromDate = this.props.from ? `${this.props.from.day}/${this.props.from.month}/${this.props.from.year}` : '';\n    let toDate = this.props.to ? `${this.props.to.day}/${this.props.to.month}/${this.props.to.year}` : ''; // if a from date has not been chosen, output a 'Chose date range' msg\n\n    if (!fromDate) {\n      label = 'Vælg Fra og Til';\n    } else if (fromDate && !toDate) {\n      label = fromDate;\n    } else if (fromDate && toDate) {\n      label = fromDate + \" - \" + toDate;\n    }\n\n    let toggleIcon = this.state.active ? ' rotate-icon' : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CalendarDropdown-wrapper\",\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"CalendarDropdown-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, label), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"CalendarDropdown-icon\" + toggleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SingleDatePicker-wrapper\" + toggleVisibility,\n      ref: node => {\n        this.node = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DateRangePicker, {\n      from: this.props.from,\n      to: this.props.to,\n      handleDateClick: this.props.handleDateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n;\nexport default CalendarDropdown;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/CalendarDropdown/CalendarDropdown.js"],"names":["React","DateRangePicker","utils","CalendarDropdown","Component","constructor","props","state","active","handleClick","bind","handleOutsideClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","render","toggleVisibility","label","fromDate","from","day","month","year","toDate","to","toggleIcon","handleDateClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DateRangePicker from '../DateRangePicker/DateRangePicker';\n\nimport { utils } from 'react-modern-calendar-datepicker';\n\nimport './CalendarDropdown.css'\n\nclass CalendarDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    // binders: \n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  };\n\n  handleClick() {\n    if (!this.state.active) {\n      // attach/remove event handler\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    // toggle the states active prop\n    this.setState({\n      active: !this.state.active\n    })\n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    \n    this.handleClick();\n  }\n\n  render() {\n    // toggle the visibility of the MultiSelect component\n    // using the components state\n    let toggleVisibility = this.state.active ? '' : ' hidden';\n\n    // make a label\n    let label = '';\n\n    let fromDate = this.props.from ? \n      `${this.props.from.day}/${this.props.from.month}/${this.props.from.year}`\n      : '';\n\n    let toDate = this.props.to ? \n      `${this.props.to.day}/${this.props.to.month}/${this.props.to.year}`\n      : '';\n\n    // if a from date has not been chosen, output a 'Chose date range' msg\n    if (!fromDate) {\n      label = 'Vælg Fra og Til'\n    } \n    \n    else if (fromDate && !toDate) {\n      label = fromDate;\n    } \n\n    else if (fromDate && toDate) {\n      label = fromDate + \" - \" + toDate\n    }\n\n    let toggleIcon = this.state.active ? ' rotate-icon' : '';\n\n    return(\n      <div>\n        <div \n          className=\"CalendarDropdown-wrapper\"\n          onClick={ () => this.handleClick() }\n        >\n          <span className=\"CalendarDropdown-label\">{label}</span>\n          <i className={\"CalendarDropdown-icon\" + toggleIcon}></i>\n        </div>\n        <div \n          className={\"SingleDatePicker-wrapper\" + toggleVisibility}\n          ref={node => { this.node = node; }}\n          >\n          <DateRangePicker\n            from={this.props.from}\n            to={this.props.to}\n            handleDateClick={this.props.handleDateClick}\n          /> \n        </div> \n      </div>    \n    );\n  };\n};\n\nexport default CalendarDropdown;\n"]},"metadata":{},"sourceType":"module"}
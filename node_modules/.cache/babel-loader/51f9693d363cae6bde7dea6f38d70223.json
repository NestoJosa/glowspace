{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Nav/Nav.js\";\n// Nav.js\nimport React from 'react';\nimport NavLogo from './NavLogo/NavLogo';\nimport NavBar from './NavBar/NavBar';\nimport NavMenu from './NavMenu/NavMenu';\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props); // default state for the menu\n\n    this.state = {\n      isOpen: false\n    }; // binders\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // if the menu is open, call handleClick\n    if (this.state.isOpen) {\n      this.handleClick();\n    }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    } // toggle the state, which in turn closes/opens the menu\n\n\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) {\n      return;\n    } // call handleClick to remove handler and close the menu\n\n\n    this.handleClick();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Nav\" // the following reference is needed to track clicks outside/inside of Nav\n      // in order to close the menu, once its open  \n      ,\n      ref: node => {\n        this.node = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      isOpen: this.state.isOpen,\n      onBurgerClick: this.handleClick,\n      onLogoClick: this.handleLogoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NavBar__logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLogo, {\n      onClick: this.handleLogoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(NavMenu, {\n      isOpen: this.state.isOpen,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Nav;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Nav/Nav.js"],"names":["React","NavLogo","NavBar","NavMenu","Nav","Component","constructor","props","state","isOpen","handleClick","bind","handleOutsideClick","handleLogoClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","render"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb,CAHiB,CAKjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDE,EAAAA,eAAe,GAAG;AAChB;AACA,QAAI,KAAKL,KAAL,CAAWC,MAAf,EAAuB;AAAE,WAAKC,WAAL;AAAqB;AAC/C;;AAEDA,EAAAA,WAAW,GAAG;AACZ;AACA;AACA;AACA;AACA,QAAI,CAAC,KAAKF,KAAL,CAAWC,MAAhB,EAAwB;AACtBK,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKH,kBAAxC,EAA4D,KAA5D;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKJ,kBAA3C,EAA+D,KAA/D;AACD,KATW,CAUZ;;;AACA,SAAKK,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,KAAd;AACD;;AAEDG,EAAAA,kBAAkB,CAACM,CAAD,EAAI;AACpB;AACA,QAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAAE;AAAS,KAFzB,CAGpB;;;AACA,SAAKX,WAAL;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,KADZ,CAEE;AACA;AAHF;AAIE,MAAA,GAAG,EAAEH,IAAI,IAAI;AAAE,aAAKA,IAAL,GAAYA,IAAZ;AAAmB,OAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,MAAD;AACE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWC,MADrB;AAEE,MAAA,aAAa,EAAE,KAAKC,WAFtB;AAGE,MAAA,WAAW,EAAE,KAAKG,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAYI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKA,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZJ,eAuBI,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,MADrB;AAEE,MAAA,OAAO,EAAE,KAAKC,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,CADF;AA8BD;;AArE+B;;AAwElC,eAAeN,GAAf","sourcesContent":["// Nav.js\n\nimport React from 'react';\nimport NavLogo from './NavLogo/NavLogo';\nimport NavBar from './NavBar/NavBar';\nimport NavMenu from './NavMenu/NavMenu';\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    // default state for the menu\n    this.state = { isOpen: false }\n    \n    // binders\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // if the menu is open, call handleClick\n    if (this.state.isOpen) { this.handleClick(); }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n    // toggle the state, which in turn closes/opens the menu\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) { return; }\n    // call handleClick to remove handler and close the menu\n    this.handleClick();\n  }\n  \n  render() {\n    return(\n      <div \n        className=\"Nav\"\n        // the following reference is needed to track clicks outside/inside of Nav\n        // in order to close the menu, once its open  \n        ref={node => { this.node = node; }}>\n        \n          <NavBar\n            isOpen={this.state.isOpen} \n            onBurgerClick={this.handleClick}\n            onLogoClick={this.handleLogoClick}\n          />\n                \n          <div className=\"NavBar__logo\">\n            <NavLogo onClick={this.handleLogoClick} />\n          </div>\n          {/* \n\n              expected:\n              <Logo>\n              <Hamburger>\n              <NavMenu>\n\n           */}\n          <NavMenu \n            isOpen={this.state.isOpen}\n            onClick={this.handleClick}\n          />\n      </div>\n    )\n  }\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/* \n\n  This components only job is to take a date string e.g.:\n  2020-02-04 10:00:00\n  yyyy-mm-dd h-m-ms\n\n  and format it to:\n  \"Tirsdag d. 4 Feb. kl 10.00\"\n\n*/var FormatDate=function FormatDate(props){var input=props.dateString;// => e.g. \"2020-02-04 10:00:00\"\n// Exchange the dashes in the date for slashes,\n// this is needed for the following \"new Date\"\" call to work in Safari\n// e.g. \"2020-02-04 10:00:00\" to \"2020/02/04 10:00:00\"\n// split the date string into an array of two elements: date and time\nvar splittedDateStr=input.split(\" \");// split the date element into an array\nvar splittedDate=splittedDateStr[0].split(\"-\");// join back the splitted date into a string seperated by a dash\nvar joinedDate=splittedDate.join(\"/\");// concatenate the date with the time\nvar dateStrWithSlashes=joinedDate+\" \"+splittedDateStr[1];// Convert the date in numbers, to a date including a weekday and month:\n// e.g. \"2020/02/04 10:00:00\", to \"tirsdag 4. feb. 10.00\"\nvar options={weekday:'long',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'};var readableDate=new Date(dateStrWithSlashes).toLocaleDateString('da-DK',options);// Make a nicer date: cap first letter of day and month, + \"d.\" & \"kl\", - \".\" from day nr:\n// e.g. \"tirsdag 4. feb. 10.00\", to \"Tirsdag d. 4 Feb. kl 10.00\"\nvar dateArr=readableDate.split(' ');// Cap the first letter of weekday\ndateArr[0]=dateArr[0].charAt(0).toUpperCase()+dateArr[0].substring(1);// Add a \"d.\" after the weekday, before the day number\ndateArr.splice(1,0,'d.');// Remove the ending dot from the day number ex: \"15.\" to \"15\"\ndateArr[2]=dateArr[2].substring(0,dateArr[2].length-1);// Cap the first letter of month\ndateArr[3]=dateArr[3].charAt(0).toUpperCase()+dateArr[3].substring(1);// Add a \"kl\" after the month, before the hour\ndateArr.splice(4,0,'kl');// Convert the array back into a string\nvar output=dateArr.join(\" \");return output;// => \"Tirsdag d. 4 Feb. kl 10.00\"\n};export default FormatDate;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/ProcessSearchResults/FormatDate.js"],"names":["FormatDate","props","input","dateString","splittedDateStr","split","splittedDate","joinedDate","join","dateStrWithSlashes","options","weekday","month","day","hour","minute","readableDate","Date","toLocaleDateString","dateArr","charAt","toUpperCase","substring","splice","length","output"],"mappings":"AAAA;;;;;;;;;EAWA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,UAAlB,CACA;AAEA;AACA;AACA;AACA;AACA,GAAIC,CAAAA,eAAe,CAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAtB,CACA;AACA,GAAIC,CAAAA,YAAY,CAAGF,eAAe,CAAC,CAAD,CAAf,CAAmBC,KAAnB,CAAyB,GAAzB,CAAnB,CACA;AACA,GAAIE,CAAAA,UAAU,CAAGD,YAAY,CAACE,IAAb,CAAkB,GAAlB,CAAjB,CACA;AACA,GAAIC,CAAAA,kBAAkB,CAAGF,UAAU,CAAG,GAAb,CAAmBH,eAAe,CAAC,CAAD,CAA3D,CAEA;AACA;AACA,GAAMM,CAAAA,OAAO,CACP,CAACC,OAAO,CAAE,MAAV,CAAkBC,KAAK,CAAE,OAAzB,CAAkCC,GAAG,CAAE,SAAvC,CAAkDC,IAAI,CAAE,SAAxD,CAAmEC,MAAM,CAAE,SAA3E,CADN,CAEA,GAAMC,CAAAA,YAAY,CAAG,GAAIC,CAAAA,IAAJ,CAASR,kBAAT,EAA6BS,kBAA7B,CAAgD,OAAhD,CAAyDR,OAAzD,CAArB,CAEA;AACA;AACA,GAAMS,CAAAA,OAAO,CAAGH,YAAY,CAACX,KAAb,CAAmB,GAAnB,CAAhB,CACA;AACAc,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,GAAqCF,OAAO,CAAC,CAAD,CAAP,CAAWG,SAAX,CAAqB,CAArB,CAAlD,CACA;AACAH,OAAO,CAACI,MAAR,CAAe,CAAf,CAAkB,CAAlB,CAAqB,IAArB,EACA;AACAJ,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAAP,CAAWG,SAAX,CAAqB,CAArB,CAAwBH,OAAO,CAAC,CAAD,CAAP,CAAWK,MAAX,CAAmB,CAA3C,CAAb,CACA;AACAL,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,GAAqCF,OAAO,CAAC,CAAD,CAAP,CAAWG,SAAX,CAAqB,CAArB,CAAlD,CACA;AACAH,OAAO,CAACI,MAAR,CAAe,CAAf,CAAkB,CAAlB,CAAqB,IAArB,EACA;AACA,GAAME,CAAAA,MAAM,CAAGN,OAAO,CAACX,IAAR,CAAa,GAAb,CAAf,CAEA,MAAOiB,CAAAA,MAAP,CACA;AACD,CAxCD,CA0CA,cAAezB,CAAAA,UAAf","sourcesContent":["/* \n\n  This components only job is to take a date string e.g.:\n  2020-02-04 10:00:00\n  yyyy-mm-dd h-m-ms\n\n  and format it to:\n  \"Tirsdag d. 4 Feb. kl 10.00\"\n\n*/\n\nconst FormatDate = props => {\n  let input = props.dateString;\n  // => e.g. \"2020-02-04 10:00:00\"\n\n  // Exchange the dashes in the date for slashes,\n  // this is needed for the following \"new Date\"\" call to work in Safari\n  // e.g. \"2020-02-04 10:00:00\" to \"2020/02/04 10:00:00\"\n  // split the date string into an array of two elements: date and time\n  let splittedDateStr = input.split(\" \");\n  // split the date element into an array\n  let splittedDate = splittedDateStr[0].split(\"-\")\n  // join back the splitted date into a string seperated by a dash\n  let joinedDate = splittedDate.join(\"/\");\n  // concatenate the date with the time\n  let dateStrWithSlashes = joinedDate + \" \" + splittedDateStr[1];\n\n  // Convert the date in numbers, to a date including a weekday and month:\n  // e.g. \"2020/02/04 10:00:00\", to \"tirsdag 4. feb. 10.00\"\n  const options = \n        {weekday: 'long', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'};\n  const readableDate = new Date(dateStrWithSlashes).toLocaleDateString('da-DK', options);\n\n  // Make a nicer date: cap first letter of day and month, + \"d.\" & \"kl\", - \".\" from day nr:\n  // e.g. \"tirsdag 4. feb. 10.00\", to \"Tirsdag d. 4 Feb. kl 10.00\"\n  const dateArr = readableDate.split(' ');\n  // Cap the first letter of weekday\n  dateArr[0] = dateArr[0].charAt(0).toUpperCase() + dateArr[0].substring(1);\n  // Add a \"d.\" after the weekday, before the day number\n  dateArr.splice(1, 0, 'd.');\n  // Remove the ending dot from the day number ex: \"15.\" to \"15\"\n  dateArr[2] = dateArr[2].substring(0, dateArr[2].length -1);\n  // Cap the first letter of month\n  dateArr[3] = dateArr[3].charAt(0).toUpperCase() + dateArr[3].substring(1);\n  // Add a \"kl\" after the month, before the hour\n  dateArr.splice(4, 0, 'kl');\n  // Convert the array back into a string\n  const output = dateArr.join(\" \")\n\n  return output;\n  // => \"Tirsdag d. 4 Feb. kl 10.00\"\n};\n\nexport default FormatDate;"]},"metadata":{},"sourceType":"module"}
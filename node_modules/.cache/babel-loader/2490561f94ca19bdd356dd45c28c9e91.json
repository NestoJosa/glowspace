{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/NavBar/NavBar.js\";\nimport React from 'react';\nimport Logo from '../Logo/Logo';\nimport MenuList from '../MenuList/MenuList';\nimport { HamburgerButton } from 'react-hamburger-button';\nimport { Link } from 'react-router-dom'; // Is this not a no-no in reactland? \n// Because container components are not supposed to have style?\n// How to refactor this code and get the same results?\n// Add the rules to Global.css?\n\nimport './NavBar.css';\n\nclass NavbarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScroll = () => {\n      this.setState({\n        scrollY: window.scrollY\n      });\n    };\n\n    this.state = {\n      isActive: false,\n      scrollY: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  handleClick() {\n    if (!this.state.isActive) {\n      // attach/remove event handler\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    this.setState({\n      isActive: !this.state.isActive\n    });\n  }\n\n  handleLogoClick() {\n    if (this.state.isActive) {\n      this.handleClick();\n    }\n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.handleClick();\n  }\n\n  render() {\n    let className = 'menu';\n\n    if (this.state.isActive) {\n      className += ' menu-active';\n    } else {\n      className = 'menu';\n    }\n\n    let scrolled = this.state.scrollY > 100 ? \"scrolled\" : \"\";\n    return (\n      /*#__PURE__*/\n      // The following is needed in order to be able to \n      // close the menu when clicke  \n      React.createElement(\"div\", {\n        ref: node => {\n          this.node = node;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MenuList, {\n        className: className,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"navbar-wrapper\",\n        className: scrolled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"logo-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Logo, {\n        onClick: this.handleLogoClick,\n        id: \"NavBar-Logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"burger-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(HamburgerButton, {\n        open: this.state.isActive,\n        onClick: this.handleClick,\n        width: 18,\n        height: 15,\n        strokeWidth: 3,\n        color: \"white\",\n        animationDuration: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }))))\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n}\n\n;\nexport default NavbarContainer;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/NavBar/NavBar.js"],"names":["React","Logo","MenuList","HamburgerButton","Link","NavbarContainer","Component","constructor","props","handleScroll","setState","scrollY","window","state","isActive","handleClick","bind","handleOutsideClick","handleLogoClick","componentDidMount","addEventListener","document","removeEventListener","e","node","contains","target","render","className","scrolled","componentWillUnmount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Logo from '../Logo/Logo';\nimport MenuList from '../MenuList/MenuList';\nimport { HamburgerButton } from 'react-hamburger-button';\nimport { Link } from 'react-router-dom';\n\n// Is this not a no-no in reactland? \n// Because container components are not supposed to have style?\n// How to refactor this code and get the same results?\n// Add the rules to Global.css?\nimport './NavBar.css'\n\nclass NavbarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false,\n      scrollY: 0\n    }\n    \n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    this.setState({scrollY: window.scrollY});\n  }\n  \n\n  handleClick() {\n    if (!this.state.isActive) {\n      // attach/remove event handler\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    this.setState({\n      isActive: !this.state.isActive\n    })\n  }\n\n  handleLogoClick() {\n    if (this.state.isActive) {\n      this.handleClick();\n    }\n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    \n    this.handleClick();\n  }\n\n  render() {\n    let className = 'menu';\n    if (this.state.isActive) {\n      className+= ' menu-active'\n    } else {\n      className = 'menu'\n    }\n\n    let scrolled = this.state.scrollY > 100 ? \"scrolled\" : \"\";\n\n    return(\n      // The following is needed in order to be able to \n      // close the menu when clicke  \n      <div ref={node => { this.node = node; }} >\n        <MenuList \n          className={className}\n          onClick={this.handleClick}\n        />\n        <div id=\"navbar-wrapper\"  className={scrolled}>\n\n          <div id=\"logo-wrapper\">\n            <Link to=\"/\">\n              <Logo \n                onClick={this.handleLogoClick}\n                id=\"NavBar-Logo\"\n              />\n            </Link>\n          </div>\n\n          <div id=\"burger-wrapper\">\n            <HamburgerButton\n              open={this.state.isActive}\n              onClick={this.handleClick}\n              width={18}\n              height={15}\n              strokeWidth={3}\n              color='white'\n              animationDuration={0.5}\n            />\n          </div>\n          \n        </div>\n      </div>\n    )\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n};\n\nexport default NavbarContainer;"]},"metadata":{},"sourceType":"module"}
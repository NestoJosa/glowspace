{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Nav/Nav.js\";\n// Nav.js\nimport React from 'react';\nimport NavLogo from './NavLogo/NavLogo';\nimport { HamburgerSqueeze as NavBurger } from 'react-animated-burgers';\nimport NavMenu from './NavMenu/NavMenu';\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props); // the menus is closed as default\n\n    this.state = {\n      isOpen: false\n    }; // binders\n\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // if the menu is open, call handleClick\n    if (this.state.isOpen) {\n      this.handleClick();\n    }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    } // toggle the state, which in turn closes/opens the menu\n\n\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) {\n      return;\n    } // call handleClick to remove handler and close the menu\n\n\n    this.handleClick();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /* wip: refactoring to a more generic wrapper */\n      React.createElement(\"div\", {\n        className: \"NavWrapper Nav--horizontal\" // needed to track clicks outside of nav\n        ,\n        ref: node => {\n          this.node = node;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NavWrapper__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLogo, {\n        onClick: this.handleLogoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NavWrapper__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NavWrapper__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Nav__logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLogo, {\n        onClick: this.handleLogoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Nav__burger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavBurger, {\n        isActive: this.state.isOpen,\n        barColor: \"white\",\n        toggleButton: this.handleClick,\n        buttonStyle: {\n          padding: \"0\"\n        },\n        buttonWidth: 36,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Nav__menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavMenu, {\n        isOpen: this.state.isOpen,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      })))\n    );\n  }\n\n}\n\nexport default Nav;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Nav/Nav.js"],"names":["React","NavLogo","HamburgerSqueeze","NavBurger","NavMenu","Nav","Component","constructor","props","state","isOpen","handleLogoClick","bind","handleClick","handleOutsideClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","render","padding"],"mappings":"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","sourcesContent":["// Nav.js\n\nimport React from 'react';\nimport NavLogo from './NavLogo/NavLogo';\nimport { HamburgerSqueeze as NavBurger } from 'react-animated-burgers'\nimport NavMenu from './NavMenu/NavMenu';\n\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    // the menus is closed as default\n    this.state = { isOpen: false }\n    \n    // binders\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // if the menu is open, call handleClick\n    if (this.state.isOpen) { this.handleClick(); }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n    // toggle the state, which in turn closes/opens the menu\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) { return; }\n    // call handleClick to remove handler and close the menu\n    this.handleClick();\n  }\n  \n  render() {\n    return(\n      /* wip: refactoring to a more generic wrapper */\n      <div\n        className=\"NavWrapper Nav--horizontal\"\n        // needed to track clicks outside of nav\n        ref={node => { this.node = node; }}>\n\n          {/* wip: make this wrapper more generic */}\n          <div className=\"NavWrapper__item\">\n          <NavLogo onClick={this.handleLogoClick} />\n          </div>\n          <div className=\"NavWrapper__item\"></div>\n          <div className=\"NavWrapper__item\"></div>\n\n          <div className=\"Nav__logo\">\n            <NavLogo onClick={this.handleLogoClick} />\n          </div>\n\n          <div className=\"Nav__burger\">\n            <NavBurger\n              isActive={this.state.isOpen} \n              barColor=\"white\"\n              toggleButton={this.handleClick}\n              buttonStyle={{ padding: \"0\" }}\n              buttonWidth={36}\n            />\n          </div>\n\n          <div className=\"Nav__menu\">\n            <NavMenu \n              isOpen={this.state.isOpen}\n              onClick={this.handleClick}\n            />\n          </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}
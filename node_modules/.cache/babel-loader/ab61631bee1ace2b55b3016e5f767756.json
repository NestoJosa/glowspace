{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Nav/Nav.js\";\n// Nav.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../Logo/Logo';\nimport { HamburgerSqueeze as NavBurger } from 'react-animated-burgers';\nimport NavMenu from './NavMenu/NavMenu';\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props); // the menus is closed as default\n\n    this.state = {\n      isOpen: false\n    }; // binders\n\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // if the menu is open, call handleClick\n    if (this.state.isOpen) {\n      this.handleClick();\n    }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    } // toggle the state, which in turn closes/opens the menu\n\n\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) {\n      return;\n    } // call handleClick to remove handler and close the menu\n\n\n    this.handleClick();\n  }\n\n  render() {\n    // styles for the logo\n    const logoStyles = {\n      height: \"50px\"\n    }; // the open/close menu toggler\n\n    const menuClassNameToggler = this.state.isOpen ? \" Nav__menu--open\" : \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Nav Nav--horizontal\" // needed to track clicks outside of nav\n      ,\n      ref: node => {\n        this.node = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"Nav__logoLink\",\n      to: \"/\",\n      onClick: this.handleLogoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      style: logoStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(NavBurger, {\n      className: \"Nav__burger\",\n      isActive: this.state.isOpen,\n      barColor: \"white\",\n      toggleButton: this.handleClick,\n      buttonStyle: {\n        padding: \"0\"\n      },\n      buttonWidth: 36,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Nav__menu\" + menuClassNameToggler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavMenu, {\n      isOpen: this.state.isOpen,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Nav;","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Nav/Nav.js"],"names":["React","Link","Logo","HamburgerSqueeze","NavBurger","NavMenu","Nav","Component","constructor","props","state","isOpen","handleLogoClick","bind","handleClick","handleOutsideClick","document","addEventListener","removeEventListener","setState","e","node","contains","target","render","logoStyles","height","menuClassNameToggler","padding"],"mappings":"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","sourcesContent":["// Nav.js\n\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport Logo from '../Logo/Logo';\nimport { HamburgerSqueeze as NavBurger } from 'react-animated-burgers'\nimport NavMenu from './NavMenu/NavMenu';\n\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    // the menus is closed as default\n    this.state = { isOpen: false }\n    \n    // binders\n    this.handleLogoClick = this.handleLogoClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleLogoClick() {\n    // if the menu is open, call handleClick\n    if (this.state.isOpen) { this.handleClick(); }\n  }\n\n  handleClick() {\n    // before toggling the isOpen state, check if the menu is open/closed\n    // in order to add/remove the eventhandler that is responsible for \n    // checking if users clicks outside/inside of the nav bar and menu\n    // so that we can close the menu if users clicks outside of nav\n    if (!this.state.isOpen) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n    // toggle the state, which in turn closes/opens the menu\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  handleOutsideClick(e) {\n    // dont do anyting if user clicked on nav\n    if (this.node.contains(e.target)) { return; }\n    // call handleClick to remove handler and close the menu\n    this.handleClick();\n  }\n  \n  render() {\n    \n    // styles for the logo\n    const logoStyles = { height: \"50px\" }\n    \n    // the open/close menu toggler\n    const menuClassNameToggler = this.state.isOpen ? \" Nav__menu--open\" : \"\";\n\n    return(\n\n      <div\n        className=\"Nav Nav--horizontal\"\n        // needed to track clicks outside of nav\n        ref={node => { this.node = node; }}>\n\n          {/* compiles to an anchor */}\n          <Link\n            className=\"Nav__logoLink\"\n            to=\"/\"\n            onClick={this.handleLogoClick}>\n            <Logo style={logoStyles} />\n          </Link>\n\n          {/* compiles to a button */}\n          <NavBurger\n            className=\"Nav__burger\"\n            isActive={this.state.isOpen} \n            barColor=\"white\"\n            toggleButton={this.handleClick}\n            buttonStyle={{ padding: \"0\" }}\n            buttonWidth={36}\n          />\n\n          <div className={\"Nav__menu\" + menuClassNameToggler}>\n            <NavMenu \n              isOpen={this.state.isOpen}\n              onClick={this.handleClick}\n            />\n          </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}
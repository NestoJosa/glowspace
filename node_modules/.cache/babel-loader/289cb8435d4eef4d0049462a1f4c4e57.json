{"ast":null,"code":"import _defineProperty from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nestos/Desktop/Code/glowspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// SearchFormContainer.js\nimport React,{Component}from\"react\";import SearchForm from'./SearchForm';// Import the icons\nimport iconHair from\"../../../assets/icons/hair.svg\";import iconFace from\"../../../assets/icons/face.svg\";import iconHand from\"../../../assets/icons/hand.svg\";import iconBody from\"../../../assets/icons/body.svg\";import iconFeet from\"../../../assets/icons/feet.svg\";// Create an object for the labels in different languages\nvar treatmentAreas={eng:['Hair','Face','Hands','Body','Feet'],dk:['Hår','Ansigt','Hænder','Krop','Fødder']};// WARNING: currently it will not work to change the language settings \nvar locale='dk';// Create an object for the treatmentAreaData\nvar treatmentAreaData={hair:{label:treatmentAreas[locale][0],isActive:true,icon:iconHair},face:{label:treatmentAreas[locale][1],isActive:true,icon:iconFace},hands:{label:treatmentAreas[locale][2],isActive:true,icon:iconHand},body:{label:treatmentAreas[locale][3],isActive:true,icon:iconBody},feet:{label:treatmentAreas[locale][4],isActive:true,icon:iconFeet}};var SearchFormContainer=/*#__PURE__*/function(_Component){_inherits(SearchFormContainer,_Component);var _super=_createSuper(SearchFormContainer);function SearchFormContainer(props){var _this$state;var _this;_classCallCheck(this,SearchFormContainer);_this=_super.call(this,props);// Set the initial default values\n_this.state=(_this$state={},_defineProperty(_this$state,treatmentAreaData['hair'].label,treatmentAreaData['hair'].isActive),_defineProperty(_this$state,treatmentAreaData['face'].label,treatmentAreaData['face'].isActive),_defineProperty(_this$state,treatmentAreaData['hands'].label,treatmentAreaData['hands'].isActive),_defineProperty(_this$state,treatmentAreaData['body'].label,treatmentAreaData['body'].isActive),_defineProperty(_this$state,treatmentAreaData['feet'].label,treatmentAreaData['feet'].isActive),_defineProperty(_this$state,\"from\",null),_defineProperty(_this$state,\"to\",null),_this$state);// Create a list of icons. Note: we are looping through the treatmentAreaData-obj, \n// NOT the state object, because these vals will not change\n_this.treatmentAreaIconList=Object.entries(treatmentAreaData).map(function(currEl){return currEl[1].icon;});// Binders\n_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.handleDateClick=_this.handleDateClick.bind(_assertThisInitialized(_this));_this.handleSubmitClick=_this.handleSubmitClick.bind(_assertThisInitialized(_this));return _this;}// toggle the clicked treatment-area isActive value\n_createClass(SearchFormContainer,[{key:\"handleClick\",value:function handleClick(clickedTreatmentArea){this.setState(_defineProperty({},clickedTreatmentArea,!this.state[clickedTreatmentArea]));}},{key:\"handleDateClick\",value:function handleDateClick(e){this.setState({from:e.from,to:e.to});}},{key:\"handleSubmitClick\",value:function handleSubmitClick(){this.props.getSearchResults(this.state);}},{key:\"render\",value:function render(){var treatAreaAndIsActivePairs=Object.entries(this.state).slice(0,5);var treatAreaDropdownLabel=getTreatAreaLabel(getActiveTreatAreas(treatAreaAndIsActivePairs));var pickDateDropdownLabel=getPickDateDropdownLabel(this.state.from,this.state.to);return/*#__PURE__*/React.createElement(SearchForm,{treatAreaAndIsActivePairs:treatAreaAndIsActivePairs,treatAreaIcons:this.treatmentAreaIconList,treatAreaDropdownLabel:treatAreaDropdownLabel,onClick:this.handleClick// props for DatePicker\n,from:this.state.from,to:this.state.to,pickDateLabel:pickDateDropdownLabel,onDateClick:this.handleDateClick// pass the method used to get search results\n,getSearchResults:this.handleSubmitClick,isLoading:this.props.isLoading});}}]);return SearchFormContainer;}(Component);export default SearchFormContainer;/* \n\n  Helper Functions\n\n*/ // takes a list of treatment-area and is-active pairs: e.g [['Hair', true], ['Face', false], ['Hands', true]]\n// returns a list of active treatment areas only:  e.g. ['Hair', 'Hands']\nvar getActiveTreatAreas=function getActiveTreatAreas(entries){return entries.filter(function(currEl){return currEl[1]===true;}).map(function(currEl){return currEl[0];});};// takes a list of treatment areas: ['Hair', 'Hands']\n// returns a new formatted list of treat areas: [['Hair', ', Hands']]\n// note the inclusion of a comma sign and space starting from the second element\nvar getTreatAreaLabel=function getTreatAreaLabel(arr){var newLabel=[];// return a custom msg e.g. \"Chose treatment area\" if no areas chosen\nif(arr.length===0){newLabel.push(\"Vælg behandlings område\");}// do not format if only one element in the list\nelse if(arr.length===1){newLabel.push(arr[0]);}else if(arr.length>1){// push the first area to the new list\nnewLabel.push(arr[0]);// then format and push the rest\nfor(var i=1;i<arr.length;i++){newLabel.push(', '+arr[i]);}}return newLabel;};// takes a from and to date object\n// returns a label for the pickDateDropdown\nvar getPickDateDropdownLabel=function getPickDateDropdownLabel(from,to){var fromDate=from?\"\".concat(from.day,\"/\").concat(from.month):null;var toDate=to?\"\".concat(to.day,\"/\").concat(to.month):null;var label;if(!fromDate){label='Vælg datoer';}else if(fromDate&&!toDate){label=fromDate;}else if(fromDate&&toDate){label=fromDate+\" - \"+toDate;}return label;};","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchForm/SearchFormContainer.js"],"names":["React","Component","SearchForm","treatmentAreas","eng","dk","locale","treatmentAreaData","hair","label","isActive","icon","iconHair","face","iconFace","hands","iconHand","body","iconBody","feet","iconFeet","SearchFormContainer","props","state","treatmentAreaIconList","Object","entries","map","currEl","handleClick","bind","handleDateClick","handleSubmitClick","clickedTreatmentArea","setState","e","from","to","getSearchResults","treatAreaAndIsActivePairs","slice","treatAreaDropdownLabel","getTreatAreaLabel","getActiveTreatAreas","pickDateDropdownLabel","getPickDateDropdownLabel","isLoading","filter","arr","newLabel","length","push","i","fromDate","day","month","toDate"],"mappings":"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","sourcesContent":["// SearchFormContainer.js\n\nimport React, { Component } from \"react\";\nimport SearchForm from './SearchForm';\n\n// Import the icons\nimport iconHair from '../../../assets/icons/hair.svg';\nimport iconFace from '../../../assets/icons/face.svg';\nimport iconHand from '../../../assets/icons/hand.svg';\nimport iconBody from '../../../assets/icons/body.svg';\nimport iconFeet from '../../../assets/icons/feet.svg';\n\n// Create an object for the labels in different languages\nlet treatmentAreas = {\n  eng: ['Hair', 'Face', 'Hands', 'Body', 'Feet'],\n  dk: ['Hår', 'Ansigt', 'Hænder', 'Krop', 'Fødder'],\n}\n\n// WARNING: currently it will not work to change the language settings \nlet locale = 'dk';\n\n// Create an object for the treatmentAreaData\nconst treatmentAreaData = {\n  hair: {\n    label: treatmentAreas[locale][0],\n    isActive: true,\n    icon: iconHair,\n  },\n  face: {\n    label: treatmentAreas[locale][1],\n    isActive: true,\n    icon: iconFace,\n  },\n  hands: {\n    label: treatmentAreas[locale][2],\n    isActive: true,\n    icon: iconHand,\n  },\n  body: {\n    label: treatmentAreas[locale][3],\n    isActive: true,\n    icon: iconBody,\n  },\n  feet: {\n    label: treatmentAreas[locale][4],\n    isActive: true,\n    icon: iconFeet,\n  },\n}\n\nclass SearchFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    // Set the initial default values\n    this.state = {\n      [treatmentAreaData['hair'].label]:  treatmentAreaData['hair'].isActive,\n      [treatmentAreaData['face'].label]:  treatmentAreaData['face'].isActive,\n      [treatmentAreaData['hands'].label]: treatmentAreaData['hands'].isActive,\n      [treatmentAreaData['body'].label]:  treatmentAreaData['body'].isActive,\n      [treatmentAreaData['feet'].label]:  treatmentAreaData['feet'].isActive,\n      from: null,\n      to: null, \n    }\n\n    // Create a list of icons. Note: we are looping through the treatmentAreaData-obj, \n    // NOT the state object, because these vals will not change\n    this.treatmentAreaIconList = Object.entries(treatmentAreaData).map( currEl => currEl[1].icon);\n\n    // Binders\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDateClick = this.handleDateClick.bind(this);\n    this.handleSubmitClick = this.handleSubmitClick.bind(this);\n  }\n\n  // toggle the clicked treatment-area isActive value\n  handleClick(clickedTreatmentArea) {\n    this.setState({ [clickedTreatmentArea]: !this.state[clickedTreatmentArea] });\n  }\n\n  handleDateClick(e) {\n    this.setState({\n      from: e.from,\n      to: e.to\n    });\n  }\n\n  handleSubmitClick() {\n    this.props.getSearchResults(this.state); \n  }\n\n  render() {\n    let treatAreaAndIsActivePairs = Object.entries(this.state).slice(0,5);\n\n    let treatAreaDropdownLabel = getTreatAreaLabel(getActiveTreatAreas(treatAreaAndIsActivePairs));\n\n    let pickDateDropdownLabel = getPickDateDropdownLabel(this.state.from, this.state.to)\n      \n    return(\n      <SearchForm\n        treatAreaAndIsActivePairs={treatAreaAndIsActivePairs}\n        treatAreaIcons={this.treatmentAreaIconList}\n        treatAreaDropdownLabel={treatAreaDropdownLabel}\n        onClick={this.handleClick}\n        // props for DatePicker\n        from={this.state.from} \n        to={this.state.to}\n        pickDateLabel={pickDateDropdownLabel}\n        onDateClick={this.handleDateClick} \n        // pass the method used to get search results\n        getSearchResults={this.handleSubmitClick}\n        isLoading={this.props.isLoading}\n      />\n    )\n  }\n}\n\nexport default SearchFormContainer;\n\n\n/* \n\n  Helper Functions\n\n*/\n\n// takes a list of treatment-area and is-active pairs: e.g [['Hair', true], ['Face', false], ['Hands', true]]\n// returns a list of active treatment areas only:  e.g. ['Hair', 'Hands']\nconst getActiveTreatAreas = entries => entries.filter(currEl => currEl[1] === true).map(currEl => currEl[0]);\n          \n\n// takes a list of treatment areas: ['Hair', 'Hands']\n// returns a new formatted list of treat areas: [['Hair', ', Hands']]\n// note the inclusion of a comma sign and space starting from the second element\nconst getTreatAreaLabel = arr => {\n  let newLabel = [];\n  \n  // return a custom msg e.g. \"Chose treatment area\" if no areas chosen\n  if (arr.length === 0) { \n    newLabel.push(\"Vælg behandlings område\"); \n  }\n  \n  // do not format if only one element in the list\n  else if (arr.length === 1) { \n    newLabel.push(arr[0]); \n  }\n  \n  else if (arr.length > 1) {\n    // push the first area to the new list\n    newLabel.push(arr[0])\n    // then format and push the rest\n    for (let i = 1; i < arr.length; i++) { newLabel.push(', ' + arr[i]); }\n  }\n\n  return newLabel;\n};\n\n// takes a from and to date object\n// returns a label for the pickDateDropdown\nconst getPickDateDropdownLabel = (from, to) => {\n  let fromDate = from ? `${from.day}/${from.month}` : null ;\n  let toDate = to ? `${to.day}/${to.month}` : null ;\n  let label;\n\n  if (!fromDate) {\n    label = 'Vælg datoer'\n  }\n\n  else if (fromDate && !toDate) {\n    label = fromDate\n  }\n\n  else if (fromDate && toDate) {\n    label = fromDate + \" - \" + toDate\n  }\n\n  return label;\n}"]},"metadata":{},"sourceType":"module"}
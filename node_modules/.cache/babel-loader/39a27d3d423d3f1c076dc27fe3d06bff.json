{"ast":null,"code":"var _jsxFileName = \"/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchResults/SearchResultsContainer.js\";\n// SearchResultsContainer.s\n// This container component is responsible for\n// processing the raw search results\n\n/* \n\n  WIP:\n\n  Currently:\n  - this component is calling some helper functions from a utils folder,\n  and some other from the bottom of the file\n\n  Expected:\n  - all of the helper componets should be calles from a seperate utisl folder\n\n*/\nimport React from \"react\";\nimport SearchResults from './SearchResults'; // Import Utils\n\nimport { addTheTreatmentsOffered, addCountAndNextToEachTreatment } from './Utils/SearchResultsUtils';\n\nconst SearchResultsContainer = props => {\n  let output;\n  let searchResults;\n\n  if (props.rawResults) {\n    // deep copy the object\n    searchResults = JSON.parse(JSON.stringify(props.rawResults)); // add the treatment that each saloon offers,\n    // to each saloon object\n\n    addTheTreatmentsOffered(searchResults); // add a count and next date to each treatment\n\n    addCountAndNextToEachTreatment(searchResults); // shorten the title and description, if they are more than \n    // 100 or 200 chars respectively\n\n    shortenTitleAndDescription(searchResults);\n    output = searchResults;\n  }\n\n  ;\n\n  if (props.clientCoordinates && output) {\n    addDistanceToSaloon(props.clientCoordinates, output);\n  }\n\n  return /*#__PURE__*/React.createElement(SearchResults, {\n    processedSearchResults: output,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default SearchResultsContainer;\n/* \n\n  HELPER FUNCTIONS\n\n*/\n\nconst shortenTitleAndDescription = saloonArray => {\n  // Run an outer loop on the saloons\n  for (let i = 0; i < saloonArray.length; i++) {\n    const saloon = saloonArray[i]; // Run an inner loop on the treatments that each saloon offers\n\n    for (let j = 0; j < saloon.treatmentsOffered.length; j++) {\n      const treatment = saloon.treatmentsOffered[j];\n\n      if (treatment.name.length > 100) {\n        treatment.name = shortenString(treatment.name, 100);\n      }\n\n      ;\n\n      if (treatment.description.length > 250) {\n        treatment.description = shortenString(treatment.description, 250);\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  ;\n};\n\nconst shortenString = (string, desiredLength) => {\n  return string.slice(0, desiredLength) + \"[...]\";\n};","map":{"version":3,"sources":["/Users/nestos/Desktop/Code/glowspace/src/components/Search/SearchResults/SearchResultsContainer.js"],"names":["React","SearchResults","addTheTreatmentsOffered","addCountAndNextToEachTreatment","SearchResultsContainer","props","output","searchResults","rawResults","JSON","parse","stringify","shortenTitleAndDescription","clientCoordinates","addDistanceToSaloon","saloonArray","i","length","saloon","j","treatmentsOffered","treatment","name","shortenString","description","string","desiredLength","slice"],"mappings":";AAAA;AAEA;AACA;;AAEA;;;;;;;;;;;;AAaA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;AACA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,4BAAtE;;AAEA,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;AAEtC,MAAIC,MAAJ;AACA,MAAIC,aAAJ;;AAEA,MAAIF,KAAK,CAACG,UAAV,EAAsB;AAEpB;AACAD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAK,CAACG,UAArB,CAAX,CAAhB,CAHoB,CAKpB;AACA;;AACAN,IAAAA,uBAAuB,CAACK,aAAD,CAAvB,CAPoB,CASpB;;AACAJ,IAAAA,8BAA8B,CAACI,aAAD,CAA9B,CAVoB,CAYpB;AACA;;AACAK,IAAAA,0BAA0B,CAACL,aAAD,CAA1B;AAEAD,IAAAA,MAAM,GAAGC,aAAT;AACD;;AAAA;;AAED,MAAIF,KAAK,CAACQ,iBAAN,IAA2BP,MAA/B,EAAuC;AACrCQ,IAAAA,mBAAmB,CAACT,KAAK,CAACQ,iBAAP,EAA0BP,MAA1B,CAAnB;AACD;;AAED,sBACE,oBAAC,aAAD;AACE,IAAA,sBAAsB,EAAEA,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAjCD;;AAoCA,eAAeF,sBAAf;AAGA;;;;;;AAUA,MAAMQ,0BAA0B,GAAGG,WAAW,IAAI;AAChD;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAME,MAAM,GAAGH,WAAW,CAACC,CAAD,CAA1B,CAD2C,CAG3C;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,iBAAP,CAAyBH,MAA7C,EAAqDE,CAAC,EAAtD,EAA0D;AACxD,YAAME,SAAS,GAAGH,MAAM,CAACE,iBAAP,CAAyBD,CAAzB,CAAlB;;AAEA,UAAIE,SAAS,CAACC,IAAV,CAAeL,MAAf,GAAwB,GAA5B,EAAiC;AAC/BI,QAAAA,SAAS,CAACC,IAAV,GAAiBC,aAAa,CAACF,SAAS,CAACC,IAAX,EAAiB,GAAjB,CAA9B;AACD;;AAAA;;AAED,UAAID,SAAS,CAACG,WAAV,CAAsBP,MAAtB,GAA+B,GAAnC,EAAwC;AACtCI,QAAAA,SAAS,CAACG,WAAV,GAAwBD,aAAa,CAACF,SAAS,CAACG,WAAX,EAAwB,GAAxB,CAArC;AACD;;AAAA;AACF;;AAAA;AACF;;AAAA;AACF,CAlBD;;AAoBA,MAAMD,aAAa,GAAG,CAACE,MAAD,EAASC,aAAT,KAA2B;AAC/C,SAAOD,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBD,aAAhB,IAAiC,OAAxC;AACD,CAFD","sourcesContent":["// SearchResultsContainer.s\n\n// This container component is responsible for\n// processing the raw search results\n\n/* \n\n  WIP:\n\n  Currently:\n  - this component is calling some helper functions from a utils folder,\n  and some other from the bottom of the file\n\n  Expected:\n  - all of the helper componets should be calles from a seperate utisl folder\n\n*/\n\nimport React from \"react\";\n\nimport SearchResults from './SearchResults';\n\n// Import Utils\nimport {addTheTreatmentsOffered, addCountAndNextToEachTreatment} from './Utils/SearchResultsUtils';\n\nconst SearchResultsContainer = props => {\n  \n  let output;\n  let searchResults;\n\n  if (props.rawResults) {\n\n    // deep copy the object\n    searchResults = JSON.parse(JSON.stringify(props.rawResults))\n\n    // add the treatment that each saloon offers,\n    // to each saloon object\n    addTheTreatmentsOffered(searchResults)\n\n    // add a count and next date to each treatment\n    addCountAndNextToEachTreatment(searchResults)\n\n    // shorten the title and description, if they are more than \n    // 100 or 200 chars respectively\n    shortenTitleAndDescription(searchResults);\n\n    output = searchResults;\n  };\n\n  if (props.clientCoordinates && output) {\n    addDistanceToSaloon(props.clientCoordinates, output);\n  }\n\n  return(\n    <SearchResults \n      processedSearchResults={output}\n    />\n  );\n};\n\n\nexport default SearchResultsContainer;\n\n\n/* \n\n  HELPER FUNCTIONS\n\n*/\n\n\n\n\n\nconst shortenTitleAndDescription = saloonArray => {\n  // Run an outer loop on the saloons\n  for (let i = 0; i < saloonArray.length; i++) {\n    const saloon = saloonArray[i];\n\n    // Run an inner loop on the treatments that each saloon offers\n    for (let j = 0; j < saloon.treatmentsOffered.length; j++) {\n      const treatment = saloon.treatmentsOffered[j];\n      \n      if (treatment.name.length > 100) {\n        treatment.name = shortenString(treatment.name, 100);\n      };\n\n      if (treatment.description.length > 250) {\n        treatment.description = shortenString(treatment.description, 250);\n      };\n    }; \n  };\n};\n\nconst shortenString = (string, desiredLength) => {\n  return string.slice(0, desiredLength) + \"[...]\";  \n};\n"]},"metadata":{},"sourceType":"module"}